WEBVTT

00:00:06.803 --> 00:00:09.536 line:100% position:50% align:middle
Rather than having to think of a name and
a price and a description and an image of

00:00:09.536 --> 00:00:12.711 line:100% position:50% align:middle
a fish every single time, it would be nice
to have a little button where we can just

00:00:12.711 --> 00:00:18.181 line:100% position:50% align:middle
load in some fish data that's going to be
inputted into our 'state'. So I provided you

00:00:18.181 --> 00:00:23.175 line:100% position:50% align:middle
with a sample-fishes.js, where
we've got an object full of fish1,

00:00:23.175 --> 00:00:29.208 line:100% position:50% align:middle
fish2, fish3, etc., etc. All of
those fish are in this sample-fishes.

00:00:29.208 --> 00:00:34.000 line:100% position:50% align:middle
Then we need to load them into 'state'. So
we'll open up our Inventory component and

00:00:34.000 --> 00:00:39.620 line:100% position:50% align:middle
we'll add a quick button right here
that says "Load Sample Fishes."

00:00:39.620 --> 00:00:44.488 line:100% position:50% align:middle
That should render it out right below
here. Good. Then we need to have an

00:00:44.488 --> 00:00:50.081 line:100% position:50% align:middle
onClick handler. So when someone clicks
that button, we are going to run

00:00:50.081 --> 00:00:52.859 line:100% position:50% align:middle
this.loadSamples.
Now, we're going to come back and

00:00:52.859 --> 00:00:56.219 line:100% position:50% align:middle
actually change this in just a second,
but that's sort of the idea.

00:00:56.219 --> 00:01:00.141 line:100% position:50% align:middle
When you click a button, we want to run
this loadSamples() function, which in turn

00:01:00.141 --> 00:01:04.421 line:100% position:50% align:middle
should load in whatever is in this file
and put that into our 'state'.

00:01:04.421 --> 00:01:08.200 line:100% position:50% align:middle
Now, you might think, okay, well, we'll
just make a loadSamples() function on our

00:01:08.200 --> 00:01:14.160 line:100% position:50% align:middle
Inventory component. But we need to do
this method here. That needs to happen

00:01:14.160 --> 00:01:18.030 line:100% position:50% align:middle
where our 'state' lives. You tell me,
where does our 'state' live?

00:01:18.030 --> 00:01:21.320 line:100% position:50% align:middle
You're saying, it lives in our App, Wes.
That's where it lives.

00:01:21.320 --> 00:01:27.040 line:100% position:50% align:middle
So we open up our App component here and
here's our 'state'. Here's our addFish()

00:01:27.040 --> 00:01:31.166 line:100% position:50% align:middle
function that we previously had made.
We are going to make a new one called

00:01:31.166 --> 00:01:39.845 line:100% position:50% align:middle
loadSamples(). Inside of that, we are just
going to simply call this.setState

00:01:39.845 --> 00:01:42.657 line:100% position:50% align:middle
and we are going to pass it our fishes.

00:01:42.657 --> 00:01:46.193 line:100% position:50% align:middle
Now, where are our fishes?
Well, we haven't imported them from

00:01:46.193 --> 00:01:50.571 line:100% position:50% align:middle
the sample-fishes.js yet. So temporarily
go to the top real quick and we're going

00:01:50.571 --> 00:01:57.842 line:100% position:50% align:middle
to import sampleFishes from up a level
and get sample-fishes.js.

00:01:57.842 --> 00:02:03.036 line:100% position:50% align:middle
Now, I've got the sampleFishes here.
I am going to then pass it to my setState

00:02:03.036 --> 00:02:08.930 line:100% position:50% align:middle
method called loadSamples(). Then the one
last thing we need to do in order for us

00:02:08.930 --> 00:02:14.104 line:100% position:50% align:middle
to use this inside of any of the methods
that we've created. Let me ask you

00:02:14.104 --> 00:02:19.395 line:100% position:50% align:middle
this question. Why can we use this inside
of addFish()? How come we can use this

00:02:19.395 --> 00:02:22.944 line:100% position:50% align:middle
inside of that?
First of all, what is this equal to?

00:02:22.944 --> 00:02:26.133 line:100% position:50% align:middle
This is equal to the actual App.
How come we can use it in there?

00:02:26.133 --> 00:02:28.847 line:100% position:50% align:middle
It's because we did this one
little one-liner right here where

00:02:28.847 --> 00:02:33.530 line:100% position:50% align:middle
we bound the method addFish() to the
component itself. And we need to do

00:02:33.530 --> 00:02:37.690 line:100% position:50% align:middle
the same thing with our loadSamples().
So it's going to duplicate this

00:02:37.690 --> 00:02:41.409 line:100% position:50% align:middle
addFish() and replace it with loadSamples().
It's a little bit of a pain that you have

00:02:41.409 --> 00:02:45.359 line:100% position:50% align:middle
to do that every single time because more
than likely you want to do that with all

00:02:45.359 --> 00:02:49.583 line:100% position:50% align:middle
of your methods. But it's just something
that we need to do in React at the time.

00:02:49.583 --> 00:02:56.293 line:100% position:50% align:middle
So, we've got this addFish() or loadSamples()
method. Then how do we get it to

00:02:56.293 --> 00:03:00.076 line:100% position:50% align:middle
this button? How do we bring it
downstream to our inventory?

00:03:00.076 --> 00:03:05.207 line:100% position:50% align:middle
Well, we just pass that via 'props'. So if
we go down to our Inventory component

00:03:05.207 --> 00:03:09.920 line:100% position:50% align:middle
inside of App.js, you'll see that we are
already passing down addFish() via 'props'.

00:03:09.920 --> 00:03:19.919 line:100% position:50% align:middle
We can also pass down loadSamples()
via 'props,' .this.loadSamples. Okay, good.

00:03:19.919 --> 00:03:24.450 line:100% position:50% align:middle
Then if we go back to our Inventory,
remember we said this about

00:03:24.450 --> 00:03:27.450 line:100% position:50% align:middle
loadSamples()? That's not going to work
because loadSamples() doesn't live on

00:03:27.450 --> 00:03:32.480 line:100% position:50% align:middle
Inventory, loadSamples() lives on App.
We simply just pass it down.

00:03:32.480 --> 00:03:36.199 line:100% position:50% align:middle
How do we then access loadSamples()?
Well, let's take a quick look at our

00:03:36.199 --> 00:03:42.170 line:100% position:50% align:middle
React DevTools here. React DevTools.
We open up and look for our Inventory

00:03:42.170 --> 00:03:46.760 line:100% position:50% align:middle
component and you should see "Props."
Two things are being passed to

00:03:46.760 --> 00:03:49.970 line:100% position:50% align:middle
our Inventory component.
addFish(), already worked with it.

00:03:49.970 --> 00:03:55.342 line:100% position:50% align:middle
Now, we have this new loadSamples()
function. So hit this.props.loadSamples

00:03:55.342 --> 00:03:59.249 line:100% position:50% align:middle
in order to actually access that.
We'll find our App component here.

00:03:59.249 --> 00:04:02.268 line:100% position:50% align:middle
You open up your "State" and
you'll see there's nothing in there.

00:04:02.268 --> 00:04:05.921 line:100% position:50% align:middle
But if we click this button now,
oh, all of a sudden, that got

00:04:05.921 --> 00:04:11.570 line:100% position:50% align:middle
automatically populated. Why? Because
we created this function right here called

00:04:11.570 --> 00:04:17.020 line:100% position:50% align:middle
loadSamples(), which sets 'state' given those
sampleFishes that we imported.

00:04:17.020 --> 00:04:20.610 line:100% position:50% align:middle
Good. Now that we have that in our 'state',
let's actually get them displaying on the

00:04:20.610 --> 00:04:22.576 line:100% position:50% align:middle
page with a little bit of JSX.
