WEBVTT

00:00:00.000 --> 00:00:03.000 line:100% position:50% align:middle
â™ª [music] â™ª

00:00:07.180 --> 00:00:11.980 line:100% position:50% align:middle
So far with our application, when we
refresh the page, all of our data is gone,

00:00:11.980 --> 00:00:16.140 line:100% position:50% align:middle
and there's no persisting of actual data,
and for that to actually work we need

00:00:16.140 --> 00:00:19.717 line:100% position:50% align:middle
some sort of backend service, and what
we're going to be using in this video is

00:00:19.717 --> 00:00:23.620 line:100% position:50% align:middle
something called Firebase. Firebase is a
product from Google and it's really,

00:00:23.620 --> 00:00:27.040 line:100% position:50% align:middle
really nice, and probably the coolest part
about is that it uses something called

00:00:27.040 --> 00:00:31.950 line:100% position:50% align:middle
HTML5 WebSockets meaning that you can
sync all of your data from your

00:00:31.950 --> 00:00:37.240 line:100% position:50% align:middle
application up to Firebase and vice versa.
When someone changes it in Firebase,

00:00:37.240 --> 00:00:42.580 line:100% position:50% align:middle
it will be synced to our application, so
what Firebase allows us to do is not only

00:00:42.580 --> 00:00:47.990 line:100% position:50% align:middle
have a backend database but also make that
real-time, so that regardless of who's got

00:00:47.990 --> 00:00:52.603 line:100% position:50% align:middle
the application open or how
many people are editing it at once,

00:00:52.603 --> 00:00:55.300 line:100% position:50% align:middle
that data will always be
synced to everyone's' computer.

00:00:55.300 --> 00:01:00.800 line:100% position:50% align:middle
So I'm going to show you an example right
here, and I've got a blank Firebase

00:01:00.800 --> 00:01:05.988 line:100% position:50% align:middle
database right here, and the way you can
think about Firebase as it's one big

00:01:05.988 --> 00:01:10.820 line:100% position:50% align:middle
object. Now that works really, really well
with React, because the state is one big

00:01:10.820 --> 00:01:15.270 line:100% position:50% align:middle
object, and what's really cool is that we
can sync our state with Firebase,

00:01:15.270 --> 00:01:18.430 line:100% position:50% align:middle
and then any time any of them changes,
they'll all automatically sync together.

00:01:18.430 --> 00:01:22.080 line:100% position:50% align:middle
So I'm going to go to
old-fashioned-grumpy-teeth here and click

00:01:22.080 --> 00:01:25.610 line:100% position:50% align:middle
Visit Store. And all of sudden, you see
on my right-hand side

00:01:25.610 --> 00:01:29.850 line:100% position:50% align:middle
I have created that store and we've got
owner. This is some authentication stuff

00:01:29.850 --> 00:01:33.280 line:100% position:50% align:middle
that we're going to be doing in later
videos. However, when I load some sample

00:01:33.280 --> 00:01:37.370 line:100% position:50% align:middle
fishes here, oh, look, it
automatically...those fishes pop up,

00:01:37.370 --> 00:01:42.010 line:100% position:50% align:middle
and there's all of my fishes. There's fish
one and if I can add them to my order,

00:01:42.010 --> 00:01:45.680 line:100% position:50% align:middle
no problem. However, if I were to
change one of these to maybe,

00:01:45.680 --> 00:01:51.692 line:100% position:50% align:middle
like, Atlantic. Look it. It's happening in
real-time, both in my application but also

00:01:51.692 --> 00:01:55.604 line:100% position:50% align:middle
it's being synced up to Firebase and that
also works the other way around.

00:01:55.604 --> 00:02:02.250 line:100% position:50% align:middle
I changed this back to Pacific. Hit Enter.
See how it changed it in Firebase

00:02:02.250 --> 00:02:05.450 line:100% position:50% align:middle
and it's going to go open here. So if I
were to open up, like,

00:02:05.450 --> 00:02:09.400 line:100% position:50% align:middle
Safari here. I can see all the data about
it. I'm not able to log in,

00:02:09.400 --> 00:02:13.830 line:100% position:50% align:middle
because I'm not the owner of this one, and
we'll talk about that in our actual

00:02:13.830 --> 00:02:17.740 line:100% position:50% align:middle
authentication application. But if I were
then to change one of these,

00:02:17.740 --> 00:02:23.520 line:100% position:50% align:middle
again, back to Atlantic...see, changed
right there. Sorry, it's a little bit hard

00:02:23.520 --> 00:02:27.720 line:100% position:50% align:middle
to see. I'm going to make it bigger. That
one changed. That one changed.

00:02:27.720 --> 00:02:31.489 line:100% position:50% align:middle
It's real-time regardless of
who's got this specific store

00:02:31.489 --> 00:02:34.120 line:100% position:50% align:middle
open at any given moment.

00:02:34.120 --> 00:02:39.250 line:100% position:50% align:middle
Great. Now what I need you to do is to
sign up for a Firebase account.

00:02:39.250 --> 00:02:44.470 line:100% position:50% align:middle
Go to firebase.com and sign up and you'll
go to your Firebase dashboard

00:02:44.470 --> 00:02:49.130 line:100% position:50% align:middle
so Firebase recently just changed
everything up on us. So if you have,

00:02:49.130 --> 00:02:54.540 line:100% position:50% align:middle
like, a previous one from the last version
of Sartorial or any other Firebase

00:02:54.540 --> 00:02:58.130 line:100% position:50% align:middle
that maybe you ever worked with. Make sure
that you create a new project using the

00:02:58.130 --> 00:03:03.280 line:100% position:50% align:middle
new Firebase, not the old legacy one that
we don't want. So you want to go ahead

00:03:03.280 --> 00:03:11.040 line:100% position:50% align:middle
and create a new project here, and we're
going to call that Catch Of The Day,

00:03:11.040 --> 00:03:14.510 line:100% position:50% align:middle
and then put your name in it because
there's going to be thousands of you

00:03:14.510 --> 00:03:18.740 line:100% position:50% align:middle
creating this and we can't all have the
same name. Create the project there.

00:03:18.740 --> 00:03:22.600 line:100% position:50% align:middle
Now first thing we need to do is go
to the database here

00:03:22.600 --> 00:03:26.660 line:100% position:50% align:middle
and this is going to be our empty
database. Now we want to click on the

00:03:26.660 --> 00:03:31.130 line:100% position:50% align:middle
rules right here, and we're going to learn
all about how authentication works

00:03:31.130 --> 00:03:35.528 line:100% position:50% align:middle
and by default, Firebase is now locked
down, meaning that no one can edit the

00:03:35.528 --> 00:03:41.000 line:100% position:50% align:middle
data. However for learning, it's a little
bit cumbersome, because who likes to build

00:03:41.000 --> 00:03:44.310 line:100% position:50% align:middle
their authentication before they
actually learn how to use the thing.

00:03:44.310 --> 00:03:47.380 line:100% position:50% align:middle
So what we're going to do is we're going
to open it up, and it's obviously just

00:03:47.380 --> 00:03:50.740 line:100% position:50% align:middle
going to be you working on this database,
and then, in the authentication video,

00:03:50.740 --> 00:03:54.170 line:100% position:50% align:middle
we're going to come back here and make
sure that we lock it down so that only the

00:03:54.170 --> 00:03:57.400 line:100% position:50% align:middle
person who owns that specific
store will be able to edit it.

00:03:57.400 --> 00:04:01.240 line:100% position:50% align:middle
So we've got these rules called ".read"
and ".write" and right here it's saying

00:04:01.240 --> 00:04:07.550 line:100% position:50% align:middle
everybody can't, so we are just going to
change that to true, and we are going to

00:04:07.550 --> 00:04:14.120 line:100% position:50% align:middle
say ".write" to also be true and then
give that a save. And it's going to tell

00:04:14.120 --> 00:04:18.125 line:100% position:50% align:middle
us your security rules are defined as
public, anyone...that's no problem there.

00:04:18.600 --> 00:04:20.830 line:100% position:50% align:middle
Again, we're going to
come back and grab it.

00:04:20.830 --> 00:04:26.050 line:100% position:50% align:middle
Now we need to head back to our code
here, and we need to open up our app

00:04:26.050 --> 00:04:32.350 line:100% position:50% align:middle
component and take a little look at our
state here. So we've got our state,

00:04:32.350 --> 00:04:35.445 line:100% position:50% align:middle
and order isn't going to be synced to
Firebase. We're actually going to sync

00:04:35.445 --> 00:04:39.700 line:100% position:50% align:middle
that with local storage in a future
video, but the fishes... Any change that

00:04:39.700 --> 00:04:43.900 line:100% position:50% align:middle
happens to any of our fish state, that
needs to be synced with Firebase,

00:04:43.900 --> 00:04:46.720 line:100% position:50% align:middle
and we're going to be using a package
called Rebase to do that.

00:04:46.720 --> 00:04:51.069 line:100% position:50% align:middle
In order to connect to Rebase, we need to
make a new file and I'm not going to put

00:04:51.069 --> 00:04:53.950 line:100% position:50% align:middle
that in a components folder because it's
not a component. I'm going to go one level

00:04:53.950 --> 00:04:59.030 line:100% position:50% align:middle
higher in source and I'm going to
call it base.js, and in there,

00:04:59.030 --> 00:05:06.090 line:100% position:50% align:middle
we're going to import the Rebase package
from re-base, and we are going to create

00:05:06.090 --> 00:05:10.870 line:100% position:50% align:middle
what's called a base and that's just a
connection to our Firebase database.

00:05:10.870 --> 00:05:18.020 line:100% position:50% align:middle
So we are saying const base equals
Rebase.createClass and we need to

00:05:18.020 --> 00:05:22.303 line:100% position:50% align:middle
pass it a couple of things. We need an
API key, we need the domain that we're

00:05:22.303 --> 00:05:26.520 line:100% position:50% align:middle
actually connecting to, as well as the
database you were [inaudible].

00:05:26.520 --> 00:05:29.450 line:100% position:50% align:middle
So what I want you to do is go back to
your Firebase console,

00:05:29.450 --> 00:05:33.130 line:100% position:50% align:middle
click on the name of your database
in the top, left-hand corner,

00:05:33.130 --> 00:05:37.270 line:100% position:50% align:middle
just make sure you're on this page where
it says iOS. It might change by the time

00:05:37.270 --> 00:05:41.210 line:100% position:50% align:middle
you're seeing this but we have this, "Add
Firebase to your web app." Click that

00:05:41.210 --> 00:05:46.990 line:100% position:50% align:middle
and it's going to pop open some javascript
config here. Now we don't need all of

00:05:46.990 --> 00:05:50.980 line:100% position:50% align:middle
this. We just need the first three
things, apiKey, authDomain

00:05:50.980 --> 00:05:56.240 line:100% position:50% align:middle
and databaseURL. You can also set store
files with that as well if you're

00:05:56.240 --> 00:05:59.340 line:100% position:50% align:middle
interested in that but we're not
going to be doing that here.

00:05:59.340 --> 00:06:06.270 line:100% position:50% align:middle
And you just paste that on in here and
then we'll export that base URL so that we

00:06:06.270 --> 00:06:11.270 line:100% position:50% align:middle
can access this database connection
from any one of our files.

00:06:11.270 --> 00:06:15.220 line:100% position:50% align:middle
Anytime we need to work with Firebase, we
can just import this base,

00:06:15.220 --> 00:06:18.978 line:100% position:50% align:middle
and it's going to be already connected
to Firebase and doing all the

00:06:18.978 --> 00:06:20.950 line:100% position:50% align:middle
API keys behind the scenes.

00:06:20.950 --> 00:06:25.800 line:100% position:50% align:middle
By the way, if you're wondering, like, is
that safe to put a API key on the client,

00:06:25.800 --> 00:06:30.496 line:100% position:50% align:middle
like, couldn't anyone see that? And that's
where the authentication rules on Firebase

00:06:30.496 --> 00:06:34.250 line:100% position:50% align:middle
are going to come in handy so totally
fine if you're wondering about that.

00:06:34.250 --> 00:06:38.640 line:100% position:50% align:middle
Then we head back over to our app.js and
we want to import the base.

00:06:38.640 --> 00:06:47.110 line:100% position:50% align:middle
So we say import base from base.
That's our base.js file and now

00:06:47.110 --> 00:06:51.880 line:100% position:50% align:middle
we need to talk a little bit about
something called the React lifecycle

00:06:51.880 --> 00:06:57.000 line:100% position:50% align:middle
hooks. React has this component,
lifecycle, where it gives us a number of

00:06:57.000 --> 00:07:03.520 line:100% position:50% align:middle
sort of entry points into a component. So
when a component is being mounted or

00:07:03.520 --> 00:07:08.030 line:100% position:50% align:middle
when a component is being rendered onto
the page, there's different entry points

00:07:08.030 --> 00:07:14.030 line:100% position:50% align:middle
where we can hook into and do various
things like do an AJAX request or check

00:07:14.030 --> 00:07:18.380 line:100% position:50% align:middle
for any number of items or, in our case,
we're going to connect to rebate.

00:07:18.380 --> 00:07:22.860 line:100% position:50% align:middle
We're going to be using one called
componentWillMount, and what that does is

00:07:22.860 --> 00:07:27.740 line:100% position:50% align:middle
it allows us to hook into that, like,
split-second right before our component is

00:07:27.740 --> 00:07:31.830 line:100% position:50% align:middle
rendered, our app component is rendered to
the screen, and it's going to allow us to

00:07:31.830 --> 00:07:37.950 line:100% position:50% align:middle
sync our component state with our actual
Firebase state. So we've got

00:07:37.950 --> 00:07:41.996 line:100% position:50% align:middle
componentWillMount, componentDidMount,
componentWillReceiveProps,

00:07:41.996 --> 00:07:46.428 line:100% position:50% align:middle
shouldComponentUpdate,
componentWillupdate, componentDidUpdate

00:07:46.428 --> 00:07:49.756 line:100% position:50% align:middle
and, like, anytime you feel like, hmm, I
need to do, like, a quick check or I need

00:07:49.756 --> 00:07:54.910 line:100% position:50% align:middle
to go and fetch something on one of these
hooks, go to this component lifecycle and

00:07:54.910 --> 00:07:59.857 line:100% position:50% align:middle
look for the one that you want. The one
that we want is called componentWillMount

00:07:59.857 --> 00:08:03.630 line:100% position:50% align:middle
and I'm going to do that right
underneath our constructor here.

00:08:03.630 --> 00:08:09.640 line:100% position:50% align:middle
I'll say componentWillMount. Now we
didn't make that up. That is a special one

00:08:09.640 --> 00:08:14.410 line:100% position:50% align:middle
that is made by React. So we have render,
which we know is a special one,

00:08:14.410 --> 00:08:17.520 line:100% position:50% align:middle
but then we've just been making up, like,
addFish and loadSamples.

00:08:17.520 --> 00:08:20.920 line:100% position:50% align:middle
Now componentWillMount is one that
specifically comes from React

00:08:20.920 --> 00:08:25.690 line:100% position:50% align:middle
and we can take a look at it right here.
Invoked once, both on the client and the

00:08:25.690 --> 00:08:29.520 line:100% position:50% align:middle
server. So that's important to know if
you're doing server-side rendering.

00:08:29.520 --> 00:08:33.340 line:100% position:50% align:middle
Immediately, before the initial rendering
occurs, you call setState within this

00:08:33.340 --> 00:08:37.440 line:100% position:50% align:middle
method on render. Render will see the
updated state and will be executed only

00:08:37.440 --> 00:08:41.410 line:100% position:50% align:middle
once despite the state change. So that's
really interesting because if you wanted

00:08:41.410 --> 00:08:45.420 line:100% position:50% align:middle
to change state before it got rendered to
the page rather than rendering it,

00:08:45.420 --> 00:08:47.976 line:100% position:50% align:middle
changing state, and then
rendering a second time, that could

00:08:47.976 --> 00:08:50.263 line:100% position:50% align:middle
really save you in performance.

00:08:50.263 --> 00:08:56.130 line:100% position:50% align:middle
So what we want to do is to say this.ref
equals base.syncState,

00:08:56.130 --> 00:09:00.621 line:100% position:50% align:middle
and the first thing that it takes is a
string that points to the actual piece of

00:09:00.621 --> 00:09:03.960 line:100% position:50% align:middle
your Firebase that you'd like to sync
with, because if we take a look at my

00:09:03.960 --> 00:09:07.216 line:100% position:50% align:middle
Firebase right here...and this is the one
that I've done. The top level is,

00:09:07.216 --> 00:09:11.715 line:100% position:50% align:middle
like, the entire database and we don't
want to sync this one store.

00:09:11.715 --> 00:09:16.300 line:100% position:50% align:middle
Remember that, like, we're just viewing
this one, panicky-lazy-fungi store,

00:09:16.300 --> 00:09:21.000 line:100% position:50% align:middle
and we don't want to sync the entire
thing. So we have to tell it don't sync

00:09:21.000 --> 00:09:24.350 line:100% position:50% align:middle
the entire catch-of-the-day,
but instead, sync

00:09:24.350 --> 00:09:31.138 line:100% position:50% align:middle
catch-of-the-day/panicky-lazy-fungi/fishes
so let me do that here.

00:09:31.138 --> 00:09:34.960 line:100% position:50% align:middle
If we do backticks it would be...
let's grab the URL

00:09:34.960 --> 00:09:44.490 line:100% position:50% align:middle
here panicky-lazy-fungi/fishes, right? But
I can't hard-code panicky-lazy-fungi

00:09:44.490 --> 00:09:47.871 line:100% position:50% align:middle
because that's going
to be different depending on

00:09:47.871 --> 00:09:51.520 line:100% position:50% align:middle
which of the stores I'm on, right?

00:09:51.520 --> 00:09:57.640 line:100% position:50% align:middle
So how do we get that little piece of the
URL here, panicky-lazy-fungi or

00:09:57.640 --> 00:10:05.080 line:100% position:50% align:middle
drab-drab-tomatoes? How do I access that
actual piece? Well, that's done via props.

00:10:05.080 --> 00:10:11.980 line:100% position:50% align:middle
If we go and inspect our app
component here, you'll see that...look,

00:10:11.980 --> 00:10:18.950 line:100% position:50% align:middle
oh, this.props.params... And we never did
anything to do that but our friend React

00:10:18.950 --> 00:10:24.340 line:100% position:50% align:middle
Router, which is the parent to app, said,
"Oh, by the way, you probably will need

00:10:24.340 --> 00:10:29.332 line:100% position:50% align:middle
this storeId variable." Now remember
that's what we did in our index.js,

00:10:29.332 --> 00:10:34.934 line:100% position:50% align:middle
storeId was defined right here. You
probably will need that so we can simply

00:10:34.934 --> 00:10:43.076 line:100% position:50% align:middle
just use this.props.params.storeid and
that's it. I have access to the actual

00:10:43.076 --> 00:10:48.420 line:100% position:50% align:middle
piece and then we do /fishes because if we
look at this right here, we're also going

00:10:48.420 --> 00:10:52.703 line:100% position:50% align:middle
to do authentication which has owner, and
we may have other metadata associated with

00:10:52.703 --> 00:10:57.160 line:100% position:50% align:middle
this store. The fishes is just one piece
of that actual store so that's where we're

00:10:57.160 --> 00:11:02.750 line:100% position:50% align:middle
going to be syncing it, and then we also
need to pass in an object which has a

00:11:02.750 --> 00:11:07.130 line:100% position:50% align:middle
context, which is this, and the state
that we actually want to sync.

00:11:07.130 --> 00:11:10.236 line:100% position:50% align:middle
In our case, it's going to be called
fishes. Because, like, we also have an

00:11:10.236 --> 00:11:15.060 line:100% position:50% align:middle
OrderState which we could sync as well,
but in our case, we only want to do fishes

00:11:15.060 --> 00:11:19.830 line:100% position:50% align:middle
so that is componentWillMount, and then
however what happens if we switch from

00:11:19.830 --> 00:11:25.430 line:100% position:50% align:middle
one store to another store? We need to
stop syncing as soon as we go to another

00:11:25.430 --> 00:11:28.220 line:100% position:50% align:middle
store or we go to another page.
Otherwise, you're going to be,

00:11:28.220 --> 00:11:32.810 line:100% position:50% align:middle
like, racking up all these listeners
behind the scenes, and it could be

00:11:32.810 --> 00:11:43.142 line:100% position:50% align:middle
catastrophic. So we want to say
componentWillUnmount, and we simply say

00:11:43.142 --> 00:11:48.808 line:100% position:50% align:middle
base, which is our Firebase,
.removeBinding then we pass it this.ref,

00:11:48.808 --> 00:11:55.280 line:100% position:50% align:middle
and that's why we put the syncState in
here, that's Y-N-C. We put the syncState

00:11:55.280 --> 00:11:59.660 line:100% position:50% align:middle
in the ref so that we could reference
it later and remove that.

00:11:59.660 --> 00:12:04.340 line:100% position:50% align:middle
So let's give that a save and see where
we're at. I'm going to go back to my

00:12:04.340 --> 00:12:10.812 line:100% position:50% align:middle
Firebase console here. Open up my Catch Of
The Day. Go to my database and

00:12:10.812 --> 00:12:14.720 line:100% position:50% align:middle
then I'm going to go to our application
that we've got here, drab-drab-tomatoes

00:12:14.720 --> 00:12:17.810 line:100% position:50% align:middle
and I'm going to load in some sample
fishes, add some to my order.

00:12:17.810 --> 00:12:22.450 line:100% position:50% align:middle
Looks to be working. Now if I go to my
Firebase console, do we see any data?

00:12:22.450 --> 00:12:26.690 line:100% position:50% align:middle
Yep, there we go, just popped up.
Opened it up, there's my fishes,

00:12:26.690 --> 00:12:31.550 line:100% position:50% align:middle
fish one, fish two. Now the cool thing
about that is when I then refresh this

00:12:31.550 --> 00:12:38.650 line:100% position:50% align:middle
page, all of that data is then immediately
reinstated for me and I can make changes

00:12:38.650 --> 00:12:44.620 line:100% position:50% align:middle
to it, either on the Firebase side or on
my state side. Here, let's go in here and

00:12:44.620 --> 00:12:52.320 line:100% position:50% align:middle
change Pacific Halibut to Atlantic.
Enter. Go back to our app.

00:12:52.320 --> 00:12:55.142 line:100% position:50% align:middle
It's already being updated.
If I refresh once more,

00:12:55.142 --> 00:12:58.190 line:100% position:50% align:middle
it's already updated immediately.

00:12:58.190 --> 00:13:03.890 line:100% position:50% align:middle
So just with...I don't know, maybe we
wrote 15, 20 lines of code in this video.

00:13:03.890 --> 00:13:07.980 line:100% position:50% align:middle
It's very simple to be able to sync all of
your state, and now you don't have to

00:13:07.980 --> 00:13:12.440 line:100% position:50% align:middle
worry about, okay, I changed my state, I
need to make sure that I updated that in

00:13:12.440 --> 00:13:15.830 line:100% position:50% align:middle
the database. And these things get out of
sync really easily where now,

00:13:15.830 --> 00:13:20.140 line:100% position:50% align:middle
you as a developer, you only care about
your state and everything else,

00:13:20.140 --> 00:13:23.564 line:100% position:50% align:middle
your HTML, as well as your
Firebase, it's going to be listening

00:13:23.564 --> 00:13:25.500 line:100% position:50% align:middle
to that and they're going
to update themselves.