WEBVTT

00:00:01.196 --> 00:00:03.000 line:100% position:50% align:middle
♪ [music] ♪

00:00:07.130 --> 00:00:10.710 line:100% position:50% align:middle
So far we've been making all of our
components with this "class Header extends

00:00:10.710 --> 00:00:14.930 line:100% position:50% align:middle
React.Component," and that makes a true
React component with the whole - we're

00:00:14.930 --> 00:00:17.960 line:100% position:50% align:middle
going to learn about life cycle and a
whole bunch of stuff. And I'm actually

00:00:17.960 --> 00:00:22.400 line:100% position:50% align:middle
just going to show you one of our finished
app components where we have - rather than

00:00:22.400 --> 00:00:27.370 line:100% position:50% align:middle
just having a render() method we also have
things like loadSampleFishes() and

00:00:27.370 --> 00:00:32.020 line:100% position:50% align:middle
remove a fish and update a fish and add a fish
and removeFromOrder and addToOrder and

00:00:32.020 --> 00:00:36.220 line:100% position:50% align:middle
we also have these life cycle hooks like
componentWillUpdate and willUnmount and

00:00:36.220 --> 00:00:39.480 line:100% position:50% align:middle
those - we're going to learn all about all
of these things. And this is a pretty

00:00:39.480 --> 00:00:42.900 line:100% position:50% align:middle
loaded component. There's a lot going on
here, but however sometimes our

00:00:42.900 --> 00:00:48.680 line:100% position:50% align:middle
components going to be really simple in
that they only do one thing and that is

00:00:48.680 --> 00:00:54.710 line:100% position:50% align:middle
render out some HTML to the DOM. So when
that is the case, you don't actually need

00:00:54.710 --> 00:00:59.600 line:100% position:50% align:middle
a full React component, you just need
something called a stateless functional

00:00:59.600 --> 00:01:06.120 line:100% position:50% align:middle
component. And again, what that means is
that if you don't need other methods other

00:01:06.120 --> 00:01:12.130 line:100% position:50% align:middle
than render(), it doesn't make sense to use
an entire React component.

00:01:12.130 --> 00:01:16.240 line:100% position:50% align:middle
We can simply just use what's called a
stateless functional component,

00:01:16.240 --> 00:01:20.760 line:100% position:50% align:middle
and that will be used to render out our
JSX. So this Header right here - this is

00:01:20.760 --> 00:01:23.990 line:100% position:50% align:middle
never going to change. There's no
functionality tied to our Header.

00:01:23.990 --> 00:01:31.290 line:100% position:50% align:middle
There's no special stuff. All it does is
it creates us a 'header' with an 'h1' and an

00:01:31.290 --> 00:01:36.590 line:100% position:50% align:middle
'h3', and we use "this.props.tagline"
inside of it. So what I want to show you

00:01:36.590 --> 00:01:41.750 line:100% position:50% align:middle
is how do we actually convert this over
to a stateless functional component?

00:01:41.750 --> 00:01:45.810 line:100% position:50% align:middle
So what I'm going to do first is delete
this closing curly bracket here and delete

00:01:45.810 --> 00:01:51.180 line:100% position:50% align:middle
the whole 'class Header extends React.Component',
and we also want to delete the

00:01:51.180 --> 00:01:57.030 line:100% position:50% align:middle
entire render() here. Good. And then we're
just left with what we return.

00:01:57.030 --> 00:02:02.170 line:100% position:50% align:middle
Now here what we do is we just create a
variable called "Header",

00:02:02.170 --> 00:02:06.670 line:100% position:50% align:middle
and we're going to stick that in an arrow
function here and open that on up.

00:02:06.670 --> 00:02:13.920 line:100% position:50% align:middle
So this could also be written as "function
Header()", like that, or whatever you prefer.

00:02:13.920 --> 00:02:20.300 line:100% position:50% align:middle
Or "var Header = function" - whatever
you prefer. It seems to be...this is the

00:02:20.300 --> 00:02:25.890 line:100% position:50% align:middle
best practice here, 'const Header =',
and then we are going to get passed 'props'.

00:02:25.890 --> 00:02:30.510 line:100% position:50% align:middle
So any props that are being used for this
stateless functional component will be

00:02:30.510 --> 00:02:36.040 line:100% position:50% align:middle
passed in as 'props', so I can just take all
of this here, paste that in,

00:02:36.040 --> 00:02:40.700 line:100% position:50% align:middle
and then the only thing that we need to do
is 'this' doesn't equal anything now.

00:02:40.700 --> 00:02:44.930 line:100% position:50% align:middle
It's not bound to anything. It's not part
of React, so we just take the 'this' out,

00:02:44.930 --> 00:02:49.550 line:100% position:50% align:middle
and the props are passed in directly. So,
that's a stateless functional component.

00:02:49.550 --> 00:02:53.450 line:100% position:50% align:middle
If I save it, we should be able to see
that it still works fine.

00:02:53.450 --> 00:02:59.090 line:100% position:50% align:middle
By the way, you'll also see this little
ESLint warning here: "'StorePicker' is defined

00:02:59.090 --> 00:03:04.220 line:100% position:50% align:middle
but never used," so there's this warning in
ESLint where if you have a variable and

00:03:04.220 --> 00:03:08.180 line:100% position:50% align:middle
you never use it, maybe like, you should
delete it, but we are going to be using it

00:03:08.180 --> 00:03:10.465 line:100% position:50% align:middle
in the next video when we learn about
React Router.
