WEBVTT

00:00:01.000 --> 00:00:04.000 line:100% position:50% align:middle
♪ [music] ♪

00:00:11.650 --> 00:00:16.640 line:100% position:50% align:middle
Now that we have a bunch of different
stores that have, some have location data,

00:00:16.640 --> 00:00:19.630 line:100% position:50% align:middle
some of them don't, we have a bit of dirty
data where, really,

00:00:19.630 --> 00:00:24.740 line:100% position:50% align:middle
they should all have location data. If you
open up your MongoDB Compass application,

00:00:24.740 --> 00:00:28.250 line:100% position:50% align:middle
you'll see that the locations, some of
them don't have data, and some of them do

00:00:28.250 --> 00:00:31.860 line:100% position:50% align:middle
have data. So ideally, what we're going to
do right now is just delete everything and

00:00:31.860 --> 00:00:36.290 line:100% position:50% align:middle
start some fresh. Once we get into doing
users and stores, I'm going to have some

00:00:36.290 --> 00:00:40.070 line:100% position:50% align:middle
dummy data that you can automatically
load and delete everything.

00:00:40.070 --> 00:00:43.990 line:100% position:50% align:middle
But for now, what we need to do is go to
our documents and hover over or click on

00:00:43.990 --> 00:00:48.280 line:100% position:50% align:middle
the Trash icon. Confirm the deletion.
Click on Trash. Confirm the delete.

00:00:48.280 --> 00:00:53.740 line:100% position:50% align:middle
Click on Trash. Confirm the delete. Then,
go back here and give it a refresh.

00:00:53.740 --> 00:00:57.840 line:100% position:50% align:middle
Ah. Sometimes they don't delete. Maybe
that's a bug in this thing,

00:00:57.840 --> 00:01:02.290 line:100% position:50% align:middle
so refresh. Every now and then, I guess
only one of them deletes.

00:01:02.290 --> 00:01:06.180 line:100% position:50% align:middle
There we go. Refresh. Refresh. You should
see none showing up.

00:01:06.180 --> 00:01:12.560 line:100% position:50% align:middle
Now, let's add some new ones real quick.
So we'll say, "Brew Bar," "Good Beers,"

00:01:12.560 --> 00:01:16.590 line:100% position:50% align:middle
and feel free to skip through this just as
I add a couple here.

00:01:16.590 --> 00:01:26.540 line:100% position:50% align:middle
So I'm going to say, "brewery." Let's look
for a Brew Bar somewhere in Australia,

00:01:26.540 --> 00:01:32.470 line:100% position:50% align:middle
family-friendly, licensed. Give it a save.
Good. Let's add a couple more.

00:01:32.470 --> 00:01:42.210 line:100% position:50% align:middle
"Coffee Shop," "Great Coffee." Good. So I
just went ahead and created three.

00:01:42.210 --> 00:01:45.990 line:100% position:50% align:middle
Now, if I go back to here and refresh,
you'll see we all have three.

00:01:45.990 --> 00:01:49.150 line:100% position:50% align:middle
Go back and scroll down until you see
"Location," and it's actually going to

00:01:49.150 --> 00:01:54.110 line:100% position:50% align:middle
show you on the map where the dots are.
Now, if you don't see this,

00:01:54.110 --> 00:01:58.030 line:100% position:50% align:middle
I found that initially I didn't see this,
and I had to quit the app and restart it.

00:01:58.030 --> 00:02:03.200 line:100% position:50% align:middle
I guess it does a check only when it first
starts the app, not when you add new data

00:02:03.200 --> 00:02:07.280 line:100% position:50% align:middle
to the schema. So just quit it and start
it again if you do not see it,

00:02:07.280 --> 00:02:10.600 line:100% position:50% align:middle
and then they'll show you dots on the map
of where everything is.

00:02:10.600 --> 00:02:15.850 line:100% position:50% align:middle
Why? Because we've stored our data as
actual points, and this application here

00:02:15.850 --> 00:02:19.750 line:100% position:50% align:middle
is smart enough to say, "Oh, that's
actually map data. Let me show it on a

00:02:19.750 --> 00:02:26.520 line:100% position:50% align:middle
map," similar to how it shows you when
you've created all this data and what not.

00:02:26.520 --> 00:02:31.110 line:100% position:50% align:middle
The last thing that we want to do is,
let's try and update one of our coffee

00:02:31.110 --> 00:02:37.370 line:100% position:50% align:middle
shops. So there's one of them, which is
Brew Bar. That's in Australia.

00:02:37.370 --> 00:02:43.510 line:100% position:50% align:middle
I love Australia, but let's put it back in
Canada somewhere. So let's put that just

00:02:43.510 --> 00:02:50.210 line:100% position:50% align:middle
in Hamilton, Ontario. Give it an Enter and
save. Now, if we go back to our documents

00:02:50.210 --> 00:02:56.810 line:100% position:50% align:middle
and refresh, you'll see that this Brew
Bar, the location, it doesn't have a type

00:02:56.810 --> 00:03:01.140 line:100% position:50% align:middle
of point anymore. So you see this one,
which has never been edited,

00:03:01.140 --> 00:03:06.510 line:100% position:50% align:middle
Great Coffee, has an address, a
coordinates array, and a type of point.

00:03:06.510 --> 00:03:10.370 line:100% position:50% align:middle
But when you update it, it doesn't have a
type of point. So again,

00:03:10.370 --> 00:03:16.250 line:100% position:50% align:middle
that's another thing here where when you
do find an update, the defaults do not

00:03:16.250 --> 00:03:22.200 line:100% position:50% align:middle
kick in. So what we need to do is go to
our Store Controller and find where we do

00:03:22.200 --> 00:03:30.560 line:100% position:50% align:middle
Update Store. Right before we actually
send the "req.body", we're just going to

00:03:30.560 --> 00:03:39.250 line:100% position:50% align:middle
set the location data to be a point. So
I'll say, "req.body.location..." Let's

00:03:39.250 --> 00:03:46.810 line:100% position:50% align:middle
look at our store, I forget what the path
is, ".location.type.def." That ".type" is

00:03:46.810 --> 00:03:52.462 line:100% position:50% align:middle
going to be "point." So "location.type" is
equal to 'Point.' Give it a save. If you

00:03:52.462 --> 00:03:57.170 line:100% position:50% align:middle
do not have that point, it will not know
how to properly search for ones that are

00:03:57.170 --> 00:04:01.440 line:100% position:50% align:middle
close to us in an upcoming video. So
absolutely make sure that we have that.

00:04:01.440 --> 00:04:06.310 line:100% position:50% align:middle
Now, again, let's update that again. We'll
just click Save, go back to our MongoDB

00:04:06.310 --> 00:04:12.710 line:100% position:50% align:middle
Compass, and refresh this. Now, our Brew
Bar should have a location type of point,

00:04:12.710 --> 00:04:18.500 line:100% position:50% align:middle
there we go, being set. Back to our
schema, you see that all of our values are

00:04:18.500 --> 00:04:22.900 line:100% position:50% align:middle
here. See how it still says it's in
Australia? I guess, you just click Apply.

00:04:22.900 --> 00:04:27.070 line:100% position:50% align:middle
Oh, there we go. Click Apply, and now it
will say that they're all in Hamilton,

00:04:27.070 --> 00:04:31.020 line:100% position:50% align:middle
because I put all three of those in.
Great. See you in the next one.

00:04:32.000 --> 00:04:35.000 line:100% position:50% align:middle
♪ [music] ♪