WEBVTT

1
00:00:03.665 --> 00:00:04.688
<v Instructor>Нам нужно настроить несколько вещей</v>

2
00:00:04.688 --> 00:00:06.368
для старта.

3
00:00:06.368 --> 00:00:07.880
Мы должны установить

4
00:00:07.880 --> 00:00:09.096
и загрузить кое-что

5
00:00:09.096 --> 00:00:11.544
перед тем как мы сможем написать парочку CSS гридов.

6
00:00:11.544 --> 00:00:13.832
Первое, что мы должны – скачать Firefox,

7
00:00:13.832 --> 00:00:17.176
и причина, почему я использую Firefox

8
00:00:17.176 --> 00:00:20.728
не только в том, что они спонсировали мне этот курс,

9
00:00:20.728 --> 00:00:22.840
что безусловно хорошо – спасибо вам, ребята, за это.

10
00:00:22.840 --> 00:00:24.712
Но даже если бы они не сделали этого,

11
00:00:24.712 --> 00:00:26.560
я все равно хотел бы использовать здесь Firefox,

12
00:00:26.560 --> 00:00:29.872
так как на настоящий момент
инструменты для CSS Grid в Firefox,

13
00:00:29.872 --> 00:00:32.867
безусловно, лучшие из утилит для отладки ваших гридов.

14
00:00:32.867 --> 00:00:36.066
Chrome также имеет инструменты для отладки CSS Grid,

15
00:00:36.066 --> 00:00:37.722
однако они оставляют желать лучшего –

16
00:00:37.722 --> 00:00:39.954
они крайне простые.

17
00:00:39.954 --> 00:00:41.882
Я уверен, что они станут намного лучше со временем,

18
00:00:41.882 --> 00:00:44.963
но в данный момент Firefox - это путь вперед.

19
00:00:44.963 --> 00:00:48.474
Так что мы будем использовать
браузер Firefox во всём нашем курсе.

20
00:00:48.474 --> 00:00:50.930
Сейчас я использую Firefox Developer Edition.

21
00:00:50.930 --> 00:00:53.594
Вы можете использовать любую
версию Firefox – 'nightly' или 'stable' –

22
00:00:53.594 --> 00:00:55.266
но я рекомендую взять Developer Edition

23
00:00:55.266 --> 00:00:56.916
просто потому что у них всегда есть

24
00:00:56.916 --> 00:01:00.763
последние CSS Grid фичи в Developer Edition,

25
00:01:00.763 --> 00:01:03.923
чтоб мы могли отлаживаться

26
00:01:03.923 --> 00:01:04.756
и заглянуть в наши гриды,

27
00:01:04.756 --> 00:01:06.466
таким образом мы будем использовать эту
версию на протяжении всего курса.

28
00:01:06.466 --> 00:01:08.298
Скачайте и установите Node.js.

29
00:01:08.298 --> 00:01:10.442
Вероятно, он у вас уже установлен,

30
00:01:10.442 --> 00:01:11.610
однако, если все-таки нет,

31
00:01:11.610 --> 00:01:14.282
просто идёте и скачиваете текущую версию.

32
00:01:14.282 --> 00:01:15.588
Кликаете далее, далее, далее,

33
00:01:15.588 --> 00:01:17.378
и он установится на вашу машину.

34
00:01:17.378 --> 00:01:19.368
Как вы можете определить, установлен ли у вас Node.js –

35
00:01:19.368 --> 00:01:22.362
просто откройте ваш терминал.

36
00:01:22.362 --> 00:01:24.275
И да – вы можете использовать любой терминал в этом курсе.

37
00:01:24.275 --> 00:01:26.508
Я использую терминал HyperTerm,

38
00:01:26.508 --> 00:01:29.715
но вы можете взять встроенный терминал в Windows

39
00:01:29.715 --> 00:01:31.538
или в OS X,

40
00:01:31.538 --> 00:01:34.634
или в Linux вы вероятно уже в нём.

41
00:01:34.634 --> 00:01:36.099
Вы просто вводите 'node',

42
00:01:36.099 --> 00:01:38.202
можете написать 'node -v',

43
00:01:38.202 --> 00:01:39.177
и он скажет вам,

44
00:01:39.177 --> 00:01:40.936
какая текущая версия установлена.

45
00:01:40.936 --> 00:01:42.376
Я на версии 8.6.

46
00:01:42.376 --> 00:01:43.456
Возможно, мне захочется обновить её,

47
00:01:43.456 --> 00:01:46.664
и я просто кликну здесь и загружу следующую версию.

48
00:01:46.664 --> 00:01:49.385
В-третьих, нам нужны CSS Grid starter files,

49
00:01:49.385 --> 00:01:51.624
и если вы зашли на dashboard-страницу курса

50
00:01:51.624 --> 00:01:53.584
на courses.wesbos.com,

51
00:01:53.584 --> 00:01:56.272
вы увидите ссылку на starter files,

52
00:01:56.272 --> 00:01:57.481
откуда сможете их скачать.

53
00:01:57.481 --> 00:01:59.856
Очевидно, что здесь я еще не закончил курс по CSS Grid.

54
00:01:59.856 --> 00:02:02.728
Это просто пример из моего курса JavaScript30,

55
00:02:02.728 --> 00:02:04.392
но как только курс будет готов

56
00:02:04.392 --> 00:02:06.008
вы увидите его в dashboard'е.

57
00:02:06.008 --> 00:02:09.320
Вы можете нажать на CSS Grid.

58
00:02:09.320 --> 00:02:11.032
Сейчас там то немногое, что есть на моем GitHub,

59
00:02:11.032 --> 00:02:15.199
но вы должны увидеть GitHub репозиторий с полным набором
папок

60
00:02:16.072 --> 00:02:18.350
и видео, и каждое видео

61
00:02:18.350 --> 00:02:21.614
соответствует папке.

62
00:02:21.614 --> 00:02:24.374
В основном, у нас здесь будут лежать такие вещи

63
00:02:24.374 --> 00:02:27.291
как test-START и test-FINISHED,

64
00:02:28.238 --> 00:02:30.758
при этом FINISHED будет означать состояние файла,

65
00:02:30.758 --> 00:02:34.422
какое должно быть в конце видео,

66
00:02:34.422 --> 00:02:37.790
а START это разного рода начальный HTML

67
00:02:37.790 --> 00:02:39.855
который вам не нужно писать,

68
00:02:39.855 --> 00:02:42.518
потому что это просто займет много времени.

69
00:02:42.518 --> 00:02:43.654
Итак, мы видим это.

70
00:02:43.654 --> 00:02:47.334
Идём дальше и скачиваем всё что есть.

71
00:02:47.334 --> 00:02:50.454
Вы можете просто форкнуть репозиторий к себе,

72
00:02:50.454 --> 00:02:52.838
только будьте повнимательнее с форком,

73
00:02:52.838 --> 00:02:53.734
потому что всякое бывает.

74
00:02:53.734 --> 00:02:58.550
На примере моего курса JavaScript30, здесь люди,

75
00:02:58.550 --> 00:03:00.534
которых пара тысяч, форкнули его, а потом,

76
00:03:00.534 --> 00:03:03.095
они пытаются запушить изменения в свои репозитории,

77
00:03:03.095 --> 00:03:07.262
случайно делают пул-реквест в мой,

78
00:03:08.166 --> 00:03:11.198
что, конечно, случайность, но я
потом получаю кучу email'ов,

79
00:03:11.198 --> 00:03:14.183
Поэтому убедитесь, что вы случайно
не "забросали" меня пул-реквестами,

80
00:03:14.183 --> 00:03:15.654
и всё будет хорошо.

81
00:03:15.654 --> 00:03:16.974
Итак, это всё, что нам было нужно.

82
00:03:16.974 --> 00:03:19.046
Когда вы загрузите все файлы,

83
00:03:19.046 --> 00:03:21.846
я хочу, чтобы вы открыли их через Finder,

84
00:03:21.846 --> 00:03:23.320
что будет выглядеть примерно так,

85
00:03:23.320 --> 00:03:24.902
только папок намного больше.

86
00:03:24.902 --> 00:03:29.502
И вы видите файлы package-lock, package.json,

87
00:03:29.502 --> 00:03:32.110
но на самом деле не увидите папку node_modules –

88
00:03:32.110 --> 00:03:33.902
дайте я удалю её отсюда.

89
00:03:33.902 --> 00:03:38.069
Откройте package.json в вашем редакторе.

90
00:03:38.958 --> 00:03:40.750
Здесь на самом деле не так много всего.

91
00:03:40.750 --> 00:03:43.192
Единственная причина, по которой я попросил вас

92
00:03:43.192 --> 00:03:44.174
установить Node.js - мы будем использовать утилиту,

93
00:03:44.174 --> 00:03:45.918
которая называется browser-sync,

94
00:03:45.918 --> 00:03:47.574
Она делает следующее –

95
00:03:47.574 --> 00:03:48.950
смотрит за всеми вашими изменениями файлов

96
00:03:48.950 --> 00:03:50.894
CSS, HTML и JavaScript

97
00:03:50.894 --> 00:03:53.758
и автоматически обновляет их в браузере.

98
00:03:53.758 --> 00:03:56.550
так что мы можем оставаться здесь, в коде

99
00:03:56.550 --> 00:04:00.506
и просто глядеть на обновленный результат слева,

100
00:04:00.506 --> 00:04:03.750
без необходимости переходить в браузер
и обновлять страничку.

101
00:04:03.750 --> 00:04:07.446
Вы можете просто открыть эти файлы в HTML прямо

102
00:04:07.446 --> 00:04:10.102
в вашем браузере без browser-sync.

103
00:04:10.102 --> 00:04:12.854
Вы может просто отказаться от этой штуки, если хотите.

104
00:04:12.854 --> 00:04:14.758
Но – я полагаю, вы будете намного более продуктивны,

105
00:04:14.758 --> 00:04:18.270
если используете browser-sync, которая у нас здесь.

106
00:04:18.270 --> 00:04:21.014
Смотрите, я создал скрипт, который называется start,

107
00:04:21.014 --> 00:04:22.174
и всё, что он делает –

108
00:04:22.174 --> 00:04:25.110
запускается команда browser-sync start,

109
00:04:25.110 --> 00:04:27.582
где мы передаем несколько различных аргументов,

110
00:04:27.582 --> 00:04:28.902
или флагов.

111
00:04:28.902 --> 00:04:30.158
У нас есть сервер, который

112
00:04:30.158 --> 00:04:33.718
создает localhost URL на нашем компьютере,

113
00:04:33.718 --> 00:04:35.374
мы можем по нему зайти.

114
00:04:35.374 --> 00:04:37.638
Он просматривает все наши файлы,

115
00:04:37.638 --> 00:04:39.926
которые заканчиваются на .css, .html, and .js,

116
00:04:39.926 --> 00:04:42.590
и обновляет страницу, когда какие-либо из них изменились.

117
00:04:42.590 --> 00:04:43.622
Здесь просто папка,

118
00:04:43.622 --> 00:04:45.630
которая показывает нам содержимое всех наших папок.

119
00:04:45.630 --> 00:04:48.830
Далее – запускаемся на порту 7777,

120
00:04:48.830 --> 00:04:51.470
И далее, по-умолчанию, я собираюсь открыть

121
00:04:51.470 --> 00:04:53.742
браузер FirefoxDeveloperEdition.

122
00:04:53.742 --> 00:04:54.950
Если вы хотите изменить этот параметр,

123
00:04:54.950 --> 00:04:57.158
например, на стандартный Firefox,

124
00:04:57.158 --> 00:04:58.438
вы можете просто указать Firefox,

125
00:04:58.438 --> 00:05:00.006
или если используете Chrome по какой-то причине,

126
00:05:00.006 --> 00:05:01.686
вы можете также его указать,

127
00:05:01.686 --> 00:05:04.454
но я собираюсь остановиться на FirefoxDeveloper.

128
00:05:04.454 --> 00:05:08.982
Сейчас я хочу, чтобы вы открыли папку css-grid

129
00:05:08.982 --> 00:05:09.935
в терминале.

130
00:05:09.935 --> 00:05:13.204
Если вы не совсем уверены в том, как это работает

131
00:05:13.204 --> 00:05:17.229
и что оно делает, маленький трюк, который я люблю,

132
00:05:17.229 --> 00:05:20.632
найти папку css-grid на компьютере.

133
00:05:20.632 --> 00:05:22.216
Иду уровнем выше.

134
00:05:22.216 --> 00:05:23.232
Она вот здесь.

135
00:05:23.232 --> 00:05:26.536
И далее, скажем, я в root-директории компьютера –

136
00:05:26.536 --> 00:05:30.703
просто пишем cd, пробел, и переносим ссылку

137
00:05:31.784 --> 00:05:33.560
на папку css-grid прямо сюда.

138
00:05:33.560 --> 00:05:34.896
И вы уже знаете, что вы в этой папке,

139
00:05:34.896 --> 00:05:38.504
далее пишем pwd, чтобы узнать где мы, или ls -l.

140
00:05:38.504 --> 00:05:42.240
Мы видим, что мы в папке с файлом package.json.

141
00:05:42.240 --> 00:05:45.984
Идём далее и пишем npm install, или короче npm i,

142
00:05:45.984 --> 00:05:48.536
и эта команда установит нам нашу
единственную dependency,

143
00:05:48.536 --> 00:05:50.665
которая нужна нам для этого курса,

144
00:05:50.665 --> 00:05:54.576
а именно – browser-sync. После этого мы можем запускать.

145
00:05:54.576 --> 00:05:58.208
Теперь я что делаю: npm start,

146
00:05:58.208 --> 00:05:59.656
и это покажет нам (в окне браузера)

147
00:05:59.656 --> 00:06:01.392
все наши файлы и папки в css-grid.

148
00:06:01.392 --> 00:06:04.648
Можем пойти в 02, выбрать test-START,

149
00:06:04.648 --> 00:06:07.288
и увидеть какие-то базовые стили,
которые уже имеются.

150
00:06:07.288 --> 00:06:10.827
Пойдем дальше, откроем файл test-START

151
00:06:10.827 --> 00:06:11.692
который у нас тут,

152
00:06:11.692 --> 00:06:14.203
и видим, что это обычный простой HTML

153
00:06:14.203 --> 00:06:17.403
с которого я часто начинаю многие свои видео.

154
00:06:17.403 --> 00:06:18.395
Итак, что мы можем тут сделать:

155
00:06:18.395 --> 00:06:20.611
если у вас есть тэг <p>,

156
00:06:20.611 --> 00:06:21.444
вы введёте там hello и сохраните,

157
00:06:21.444 --> 00:06:22.523
вы увидите, что он автоматически

158
00:06:22.523 --> 00:06:24.267
отобразится в окне слева.

159
00:06:24.267 --> 00:06:27.037
Также, если есть тэг <style>,

160
00:06:27.037 --> 00:06:28.369
и например есть тэг <p>,

161
00:06:28.369 --> 00:06:30.922
и мы меняем font-size на 20px,

162
00:06:30.922 --> 00:06:33.801
размер шрифта у нас автоматически изменится.

163
00:06:33.801 --> 00:06:35.217
Другими словами, любое изменение,
которое мы внесём,

164
00:06:35.217 --> 00:06:37.553
автоматически обновит страничку слева.

165
00:06:37.553 --> 00:06:41.249
Ничего вручную обновлять не нужно.

166
00:06:41.249 --> 00:06:43.777
Редактор кода у меня VS Code.

167
00:06:43.777 --> 00:06:45.545
Вы можете использовать любой, какой захотите,

168
00:06:45.545 --> 00:06:47.329
но я очень рекомендую

169
00:06:47.329 --> 00:06:50.393
использовать редактор, который содержит в себе Emmet,

170
00:06:50.393 --> 00:06:54.229
и если вы с ним не сталкивались, пойдите на emmet.io

171
00:06:54.229 --> 00:06:58.369
и установите его, для любого практически редактора.

172
00:06:58.369 --> 00:07:00.634
В VS Code он уже сразу встроен,

173
00:07:00.634 --> 00:07:03.722
поэтому его здесь не нужно
дополнительно устанавливать.

174
00:07:03.722 --> 00:07:04.562
Зачем мы используем Emmet?

175
00:07:04.562 --> 00:07:06.394
Ну, мне нравится делать так, что если

176
00:07:06.394 --> 00:07:09.530
нам нужен container, а внутри него

177
00:07:09.530 --> 00:07:13.738
например, 10 блоков items

178
00:07:13.738 --> 00:07:15.818
жмём Tab – получаем 10 блоков внутри.

179
00:07:15.818 --> 00:07:18.610
Поэтому я собираюсь дать вам возможность
писать эти небольшие сниппеты,

180
00:07:18.610 --> 00:07:21.721
и затем, нажав или Enter, или Tab,

181
00:07:21.721 --> 00:07:24.274
автоматически сформировать тот HTML,

182
00:07:24.274 --> 00:07:25.873
который мы хотим.

183
00:07:25.873 --> 00:07:27.986
То же самое с CSS.

184
00:07:27.986 --> 00:07:30.459
Если я делаю что-то типа font-size: 50px,

185
00:07:30.459 --> 00:07:32.935
я мог бы просто написать fz50 + Tab,

186
00:07:32.935 --> 00:07:34.383
и оно будет дописано.

187
00:07:34.383 --> 00:07:36.159
Конечно, эта вещь не обязательная,

188
00:07:36.159 --> 00:07:38.119
но она делает нас более продуктивными,

189
00:07:38.119 --> 00:07:40.559
поэтому рекомендую установить,

190
00:07:40.559 --> 00:07:42.087
и я расскажу, как это работает

191
00:07:42.087 --> 00:07:44.551
по пути.

192
00:07:44.551 --> 00:07:46.871
Почему это так хорошо выглядит, спросите вы?

193
00:07:46.871 --> 00:07:49.679
На самом деле, у меня есть базовый CSS

194
00:07:49.679 --> 00:07:51.055
и я предоставил его вам здесь.

195
00:07:51.055 --> 00:07:52.575
Быстро пробегусь по нему,

196
00:07:52.575 --> 00:07:56.119
просто чтобы дать вам представление,
что в этом базовом CSS есть.

197
00:07:56.119 --> 00:07:58.871
Здесь мало что относится к CSS Grid,

198
00:07:58.871 --> 00:08:02.839
но это скорее просто CSS, который
делает хорошую картинку,

199
00:08:02.839 --> 00:08:05.311
и когда мы будем отлаживаться,

200
00:08:05.311 --> 00:08:06.575
оно будет хорошо выглядеть.

201
00:08:06.575 --> 00:08:08.655
Итак, откроем его.

202
00:08:08.655 --> 00:08:12.191
Он лежит в папке assets, называется style.css.

203
00:08:12.191 --> 00:08:15.383
Во-первых, у нас есть несколько CSS переменных,

204
00:08:15.383 --> 00:08:17.071
если вы раньше с ними не сталкивались.

205
00:08:17.071 --> 00:08:20.791
Мне реально нравится использовать
определенный желтый или черный цвет,

206
00:08:20.791 --> 00:08:23.767
потому что, не знаю, есть некое
чувство гордости от ваших демок.

207
00:08:23.767 --> 00:08:24.735
Сделайте их достойными.

208
00:08:24.735 --> 00:08:26.167
Не используйте red, green или blue,

209
00:08:26.167 --> 00:08:30.279
базовые цвета которые мы все знаем и
используем – возьмите эти.

210
00:08:30.279 --> 00:08:31.112
Проблема в том,

211
00:08:31.112 --> 00:08:33.679
что я не уверен, что вы запомните этот hex-код.

212
00:08:33.679 --> 00:08:35.354
Поэтому что мы можем сделать,

213
00:08:35.354 --> 00:08:38.187
если нам нужно например взять

214
00:08:39.023 --> 00:08:43.564
border-bottom: 10px solid, я могу сказать yellow,

215
00:08:43.564 --> 00:08:46.675
но это не тот yellow, которого я ожидаю.

216
00:08:46.675 --> 00:08:51.523
Поэтому что мы можем сделать,
можем сказать var(--yellow),

217
00:08:51.523 --> 00:08:52.763
и тогда что произойдёт –

218
00:08:52.763 --> 00:08:55.052
он будет вытаскивать тот заданный жёлтый

219
00:08:55.052 --> 00:08:58.475
который я указывал в значении в style.css.

220
00:08:58.475 --> 00:09:01.808
То же самое и здесь – если задаю color: black,

221
00:09:03.371 --> 00:09:05.020
это был бы чисто чёрный,

222
00:09:05.020 --> 00:09:07.924
но если бы я задал его как var(--black),

223
00:09:07.924 --> 00:09:10.892
это бы дало нам немного более
светлый оттенок чёрного,

224
00:09:10.892 --> 00:09:11.789
что мы и имеем тут.

225
00:09:11.789 --> 00:09:13.835
Т.е. если у вас есть несколько цветов

226
00:09:13.835 --> 00:09:15.172
которые хочется использовать

227
00:09:15.172 --> 00:09:17.620
во всех файлах и стилях проекта,

228
00:09:17.620 --> 00:09:19.828
вы можете просто поместить их в :root,

229
00:09:19.828 --> 00:09:21.819
и они будут доступны из каждого файла

230
00:09:21.819 --> 00:09:23.668
которые у нас есть.

231
00:09:23.668 --> 00:09:26.067
Далее, box-sizing: border-box.

232
00:09:26.067 --> 00:09:27.587
Это значение просто даёт нам гарантию,

233
00:09:27.587 --> 00:09:30.572
что когда мы добавляем padding или border элементу,

234
00:09:30.572 --> 00:09:32.612
у элемента при этом не изменится размер.

235
00:09:32.612 --> 00:09:34.692
Поэтому если нам надо будет задать блок

236
00:09:34.692 --> 00:09:37.172
контейнера с заданной шириной,

237
00:09:37.172 --> 00:09:38.299
тогда мы унаследуем для блока и box-sizing.

238
00:09:38.299 --> 00:09:40.084
Если вы с не знакомы с этой моделью,

239
00:09:40.084 --> 00:09:42.348
можете нагуглить, почитать, как это работает,

240
00:09:42.348 --> 00:09:45.612
как применяется дефолтное значение, почему
оно долгое время всё ломало, и т.д.

241
00:09:45.612 --> 00:09:47.788
Мы просто используем базовый шрифт.

242
00:09:47.788 --> 00:09:50.108
Я установил color: var(--black) для всего,

243
00:09:50.108 --> 00:09:52.212
и ещё немного text-shadow

244
00:09:52.212 --> 00:09:53.907
для большинства вещей.

245
00:09:53.907 --> 00:09:56.075
I don't know if you can really see that.

246
00:09:56.075 --> 00:10:00.179
Затем, у нас тут есть наследование для свойства
box-sizing: border-box,

247
00:10:00.179 --> 00:10:01.395
которое мы задаём тут.

248
00:10:01.395 --> 00:10:02.451
Видимо, это все-таки лучше,

249
00:10:02.451 --> 00:10:04.983
чем устанавливать каждый раз box-sizing: border-box.

250
00:10:04.983 --> 00:10:08.278
И ещё у меня здесь есть background.

251
00:10:08.278 --> 00:10:10.687
Это просто приятный несложный градиент вместе с
topography.svg.

252
00:10:10.687 --> 00:10:11.520
Делает вид красивым.

253
00:10:11.520 --> 00:10:13.814
Ничего имеющего отношение к теме.

254
00:10:13.814 --> 00:10:16.247
Я также применил отступы для моих элементов,

255
00:10:16.247 --> 00:10:19.646
и, в конечном счете, использую CSS Grid
для каждого item'а.

256
00:10:19.646 --> 00:10:21.991
Мы еще поговорим о том, что это такое за item,

257
00:10:21.991 --> 00:10:24.151
пока я просто хочу поместить контент по центру

258
00:10:24.151 --> 00:10:27.511
внутри каждого элемента item.

259
00:10:27.511 --> 00:10:28.415
Вот и всё.

260
00:10:28.415 --> 00:10:30.975
Это базовый CSS, который мы имеем.

261
00:10:30.975 --> 00:10:33.551
Все остальное нам нужно будет описать

262
00:10:33.551 --> 00:10:35.286
или в отдельном CSS файле,

263
00:10:35.286 --> 00:10:38.415
или, вероятнее всего, внутри тега <style>

264
00:10:38.415 --> 00:10:41.510
прямо в HTML, с которым мы работаем.

265
00:10:41.510 --> 00:10:43.654
Если у вас есть какие-то вопросы о моих сетапах,

266
00:10:43.654 --> 00:10:48.206
я вероятно ответил на них на wesbos.com/uses,

267
00:10:48.206 --> 00:10:52.839
и здесь я также попытаюсь описать различные темы

268
00:10:52.839 --> 00:10:56.454
и шрифты, и вообще то, что использую
в моём текстовом редакторе.

269
00:10:56.454 --> 00:10:59.070
Если там чего-то нет, не стесняйтесь твитнуть мне.

270
00:10:59.070 --> 00:11:02.726
Мой аккаунт в Твиттере @wesbos, и я
постараюсь отвечать на вопросы,

271
00:11:02.726 --> 00:11:03.878
насколько смогу.

272
00:11:03.878 --> 00:11:05.734
Ну и кроме прочего, давайте начнем курс.

273
00:11:05.734 --> 00:11:08.317
Увидимся в следующем видео.

