WEBVTT

1
00:00:00.595 --> 00:00:03.547
(theme music)

2
00:00:03.547 --> 00:00:05.270
<v Voiceover>So even if you're not building a website</v>

3
00:00:05.270 --> 00:00:08.964
that is built on this, like, very strict grid,

4
00:00:08.964 --> 00:00:12.506
it might even just be that your grid is one column-wide

5
00:00:12.506 --> 00:00:14.820
and maybe two rows-high,

6
00:00:14.820 --> 00:00:19.268
it's extremely handy to use CSS Grid for centering things.

7
00:00:19.268 --> 00:00:21.650
And we all know the jokes of how hard it is

8
00:00:21.650 --> 00:00:22.969
to center things in CSS.

9
00:00:22.969 --> 00:00:26.106
Well, Flexbox has fixed most of that.

10
00:00:26.106 --> 00:00:29.245
And I think it's even easier in Grid to

11
00:00:29.245 --> 00:00:30.446
to center all of your items.

12
00:00:30.446 --> 00:00:32.726
So let's actually first take a look at

13
00:00:32.726 --> 00:00:33.655
all the different properties.

14
00:00:33.655 --> 00:00:36.253
We actually have six properties that come along with

15
00:00:36.253 --> 00:00:39.951
being able to align things in Grid.

16
00:00:39.951 --> 00:00:42.768
We've got justify-items and align-items.

17
00:00:42.768 --> 00:00:45.477
Then we've got justify-content and align-content.

18
00:00:45.477 --> 00:00:48.081
And then we have align-self and justify-self.

19
00:00:48.081 --> 00:00:50.831
So really, the way to understand,

20
00:00:52.586 --> 00:00:54.600
I think most people are just sorta,

21
00:00:54.600 --> 00:00:57.810
try one and if it's the wrong one that they're looking for,

22
00:00:57.810 --> 00:00:59.899
they go for the other one.

23
00:00:59.899 --> 00:01:03.673
The way to remember it is that the justify ones are

24
00:01:03.673 --> 00:01:07.203
along the x-axis or the row axis.

25
00:01:07.203 --> 00:01:11.601
And the align items are along the column axis,

26
00:01:11.601 --> 00:01:13.696
so top to bottom, and unlike Flexbox,

27
00:01:13.696 --> 00:01:15.804
they don't switch, so you don't have to, like,

28
00:01:15.804 --> 00:01:19.158
sorta, like, remember where's my axis going.

29
00:01:19.158 --> 00:01:20.968
So let's start off

30
00:01:20.968 --> 00:01:23.483
and what I recommend for doing this is

31
00:01:23.483 --> 00:01:25.700
not to come back to this video every single time,

32
00:01:25.700 --> 00:01:30.152
but the CSS Tricks article has some really nifty here,

33
00:01:30.152 --> 00:01:33.191
these little articles, or these little images

34
00:01:33.191 --> 00:01:35.216
will show you sorta what each of them do

35
00:01:35.216 --> 00:01:37.402
and what all the different properties do.

36
00:01:37.402 --> 00:01:40.044
So let's start you off here.

37
00:01:40.044 --> 00:01:42.594
I've actually made you a bunch of different items here

38
00:01:42.594 --> 00:01:44.865
and I've given them a class of itm.

39
00:01:44.865 --> 00:01:48.029
Not item, just because I don't want the

40
00:01:48.029 --> 00:01:50.812
the styling that I've given you as base styling

41
00:01:50.812 --> 00:01:53.026
in the style.css to

42
00:01:53.026 --> 00:01:55.948
to play into our understanding of how this works.

43
00:01:55.948 --> 00:01:58.079
So first thing we wanna do is,

44
00:01:58.079 --> 00:01:59.330
let's go through the first one,

45
00:01:59.330 --> 00:02:02.182
the justify-items and align-items.

46
00:02:02.182 --> 00:02:05.310
So this is the actual items themselves.

47
00:02:05.310 --> 00:02:09.434
That's these divs or whatever the direct children are

48
00:02:09.434 --> 00:02:10.851
of the container.

49
00:02:11.701 --> 00:02:12.923
So let's go into here.

50
00:02:12.923 --> 00:02:15.003
And actually, let's first put some color on it.

51
00:02:15.003 --> 00:02:18.170
So itm, give it a background of white.

52
00:02:19.690 --> 00:02:23.054
Good, so we see how all of our items are.

53
00:02:23.054 --> 00:02:26.499
And we'll just go back up to our container

54
00:02:26.499 --> 00:02:27.999
and justify-items.

55
00:02:29.580 --> 00:02:31.281
And let's say center.

56
00:02:31.281 --> 00:02:32.281
So what will that do?

57
00:02:32.281 --> 00:02:36.740
Woo, so the default of justify-items is stretch

58
00:02:36.740 --> 00:02:38.922
and that will stretch them across

59
00:02:38.922 --> 00:02:41.115
the entire actual grid that we have.

60
00:02:41.115 --> 00:02:45.613
So here we are, this is the grid, it goes that far.

61
00:02:45.613 --> 00:02:48.916
But if we change that to center,

62
00:02:48.916 --> 00:02:51.131
you'll see that the actual item itself

63
00:02:51.131 --> 00:02:53.304
is only as wide as it needs to be.

64
00:02:53.304 --> 00:02:55.896
So if I were to take one of these and

65
00:02:55.896 --> 00:02:58.479
add something like Wes is Cool,

66
00:02:59.818 --> 00:03:02.040
you'll see that that is only as large as

67
00:03:02.040 --> 00:03:03.143
it actually needs to be.

68
00:03:03.143 --> 00:03:06.107
If it did, if it went a little bit longer than that,

69
00:03:06.107 --> 00:03:08.724
you will see that it would indeed take up

70
00:03:08.724 --> 00:03:10.865
the entire width of the grid.

71
00:03:10.865 --> 00:03:13.476
But in our case, since we're just using some numbers here

72
00:03:13.476 --> 00:03:16.397
or Wes is Cool, it's only going to

73
00:03:16.397 --> 00:03:18.799
go as wide as the actual content is.

74
00:03:18.799 --> 00:03:21.151
So we similarly have start,

75
00:03:21.151 --> 00:03:22.893
which will bring you to the start.

76
00:03:22.893 --> 00:03:26.409
And we have end, which will bring you to the end.

77
00:03:26.409 --> 00:03:29.443
You can also interchange those with flex-start as well

78
00:03:29.443 --> 00:03:33.218
and flex-end, because those were the values for Flexbox,

79
00:03:33.218 --> 00:03:37.811
but I think it makes more sense just to use start and end.

80
00:03:37.811 --> 00:03:40.349
We had stretch, let's see what else we got here.

81
00:03:40.349 --> 00:03:42.698
What, we're at justify-items.

82
00:03:42.698 --> 00:03:44.204
Start, end, center, and stretch.

83
00:03:44.204 --> 00:03:47.664
So those are all the four possible options

84
00:03:47.664 --> 00:03:49.540
that you have there.

85
00:03:49.540 --> 00:03:52.593
Again, justify is along the x-axis

86
00:03:52.593 --> 00:03:54.093
and then the align

87
00:03:55.152 --> 00:03:56.144
items

88
00:03:56.144 --> 00:03:57.164
and that is,

89
00:03:57.164 --> 00:03:59.793
let's say start, see if that does any different.

90
00:03:59.793 --> 00:04:01.231
No, it doesn't, and that's because our rows

91
00:04:01.231 --> 00:04:02.647
don't have any height to them.

92
00:04:02.647 --> 00:04:06.104
So if we were to go into here and say grid-template-rows,

93
00:04:06.104 --> 00:04:08.374
and repeat, I don't know,

94
00:04:08.374 --> 00:04:09.457
five at 100px

95
00:04:10.576 --> 00:04:11.467
high,

96
00:04:11.467 --> 00:04:14.617
you'll see that now our rows are 100 pixels high.

97
00:04:14.617 --> 00:04:17.497
And if we were to align them at the start,

98
00:04:17.497 --> 00:04:19.130
then they are at the top.

99
00:04:19.130 --> 00:04:21.493
Obviously, the end would go to the end.

100
00:04:21.493 --> 00:04:23.911
The center will go to the center.

101
00:04:23.911 --> 00:04:27.582
And the stretch will stretch them all the way across.

102
00:04:27.582 --> 00:04:30.094
So if you did wanna perfectly center something,

103
00:04:30.094 --> 00:04:33.231
it is as simple as just saying, center center,

104
00:04:33.231 --> 00:04:35.823
and that would center exactly inside of that item.

105
00:04:35.823 --> 00:04:37.153
So super easy.

106
00:04:37.153 --> 00:04:40.513
Even easier, you can use the sort of CSS shorthand

107
00:04:40.513 --> 00:04:41.897
that we've got now,

108
00:04:41.897 --> 00:04:44.647
which is just called place-items,

109
00:04:45.912 --> 00:04:47.562
and say center center.

110
00:04:47.562 --> 00:04:52.143
And that will do your justify and your align in a single go.

111
00:04:52.143 --> 00:04:53.564
What is it yelling at me about here?

112
00:04:53.564 --> 00:04:54.824
Unknown property?

113
00:04:54.824 --> 00:04:57.976
Well, we're at cutting edge here at VS Code and

114
00:04:57.976 --> 00:04:59.688
I know about it.

115
00:04:59.688 --> 00:05:03.374
So you do wanna be careful about browser support for this.

116
00:05:03.374 --> 00:05:06.986
What I would recommend doing if you are using place-items

117
00:05:06.986 --> 00:05:11.177
is to make sure that your autoprefixer will turn

118
00:05:11.177 --> 00:05:15.646
your place-items into the equivalent justify and align.

119
00:05:15.646 --> 00:05:18.700
Let's do a little inspect element, open this up.

120
00:05:18.700 --> 00:05:20.315
See if you open up your place-items,

121
00:05:20.315 --> 00:05:22.715
you can see that it is just shorthand

122
00:05:22.715 --> 00:05:25.255
for these other two properties that we have.

123
00:05:25.255 --> 00:05:29.888
So again, justify on the x-axis, align on the y-axis.

124
00:05:29.888 --> 00:05:31.587
Anytime we're talking about items,

125
00:05:31.587 --> 00:05:34.286
we're talking about the actual items themselves.

126
00:05:34.286 --> 00:05:38.834
Now let's flip over to the align-self and the justify-self.

127
00:05:38.834 --> 00:05:39.667
So.

128
00:05:39.667 --> 00:05:42.054
Oh sorry, let's flip over to the justify-content

129
00:05:42.054 --> 00:05:43.936
and the align-content.

130
00:05:43.936 --> 00:05:45.802
So we'll go over here.

131
00:05:45.802 --> 00:05:50.503
Let's look at what Mr. Coyier has to say about this.

132
00:05:50.503 --> 00:05:51.336
Justify

133
00:05:52.872 --> 00:05:53.705
content.

134
00:05:55.472 --> 00:05:56.857
Here we go.

135
00:05:56.857 --> 00:05:59.132
So the justify-content.

136
00:05:59.132 --> 00:06:03.149
If the grid is not as wide as we could possibly want,

137
00:06:03.149 --> 00:06:06.883
so in our case, we're using fr units

138
00:06:06.883 --> 00:06:09.882
and since it's gonna go all the way across.

139
00:06:09.882 --> 00:06:12.269
But if I were to change this to

140
00:06:12.269 --> 00:06:13.686
let's say, 100px,

141
00:06:14.981 --> 00:06:17.746
it actually, oh, maybe it's gotta go,

142
00:06:17.746 --> 00:06:19.847
maybe we should just have five items.

143
00:06:19.847 --> 00:06:24.404
There we go, so now our grid, if we put a border around it,

144
00:06:24.404 --> 00:06:26.371
you see our grid is this wide,

145
00:06:26.371 --> 00:06:30.454
but I only have five columns that are 100px each,

146
00:06:31.733 --> 00:06:34.137
so I've got all this extra space.

147
00:06:34.137 --> 00:06:37.122
And what do we do with that extra space?

148
00:06:37.122 --> 00:06:40.701
That is what justify-content and align-content answers.

149
00:06:40.701 --> 00:06:43.087
So again, justify is on the x-axis.

150
00:06:43.087 --> 00:06:44.999
Let's take a look at how that works.

151
00:06:44.999 --> 00:06:49.410
So I say, justify-content and I think start is the default.

152
00:06:49.410 --> 00:06:53.556
Yup, again we can do end, we can do center.

153
00:06:53.556 --> 00:06:55.464
And you see how it's centering itself.

154
00:06:55.464 --> 00:06:57.431
And then the probably two most helpful ones

155
00:06:57.431 --> 00:07:00.524
and these are mirrored in Flexbox is

156
00:07:00.524 --> 00:07:01.524
space-around

157
00:07:03.082 --> 00:07:04.522
and what that will do is

158
00:07:04.522 --> 00:07:07.382
it will take each of our items.

159
00:07:07.382 --> 00:07:10.132
So here, let me, let's bring our,

160
00:07:11.048 --> 00:07:12.798
this back to stretch.

161
00:07:13.664 --> 00:07:16.303
Stretch, so we can visualize a little easier.

162
00:07:16.303 --> 00:07:17.136
There we go.

163
00:07:17.136 --> 00:07:20.234
And then it'll take the extra space and

164
00:07:20.234 --> 00:07:24.447
put it in between each of the values that you have.

165
00:07:24.447 --> 00:07:25.715
And now you may be wondering like,

166
00:07:25.715 --> 00:07:28.404
why is this not as big as this,

167
00:07:28.404 --> 00:07:31.221
and that's because space-around will take

168
00:07:31.221 --> 00:07:33.765
all of the extra space and evenly divide it

169
00:07:33.765 --> 00:07:36.035
on either side of your column.

170
00:07:36.035 --> 00:07:39.870
So if you would not like these sorta side line things here,

171
00:07:39.870 --> 00:07:41.798
we just say space-between,

172
00:07:41.798 --> 00:07:44.517
and that will nix the left and the right,

173
00:07:44.517 --> 00:07:46.204
which is almost always what you want

174
00:07:46.204 --> 00:07:48.201
when you're trying to perfectly align your values.

175
00:07:48.201 --> 00:07:50.403
And it'll just take the extra space and put it

176
00:07:50.403 --> 00:07:52.335
in between each one.

177
00:07:52.335 --> 00:07:56.792
So now if I made this 130 or something like that,

178
00:07:56.792 --> 00:07:58.003
there's a little bit less space,

179
00:07:58.003 --> 00:08:00.557
but it will still put it evenly in between that.

180
00:08:00.557 --> 00:08:04.086
So again, if you have extra space in your grid,

181
00:08:04.086 --> 00:08:06.017
meaning that your container is wider than

182
00:08:06.017 --> 00:08:09.355
your grid needs to be, because you've used

183
00:08:09.355 --> 00:08:12.671
a hard pixel value or a rem or em value,

184
00:08:12.671 --> 00:08:15.439
not a fr unit or percentages,

185
00:08:15.439 --> 00:08:19.053
then you can use justify-content to tell it

186
00:08:19.053 --> 00:08:21.060
where those items tend to go.

187
00:08:21.060 --> 00:08:25.487
Similarly, if your grid has an actual height on it.

188
00:08:25.487 --> 00:08:27.196
So now let's get rid of some of these.

189
00:08:27.196 --> 00:08:31.097
Let's just bring it down to 10 items.

190
00:08:31.097 --> 00:08:32.435
And

191
00:08:32.435 --> 00:08:34.217
let's say that,

192
00:08:34.217 --> 00:08:37.594
in this case, we don't need all these template rows either.

193
00:08:37.594 --> 00:08:38.987
Let's get rid of that.

194
00:08:38.987 --> 00:08:39.845
There we go.

195
00:08:39.845 --> 00:08:44.188
But if our container had a hard height on it, like 500px,

196
00:08:44.188 --> 00:08:45.935
what's going to happen and by default,

197
00:08:45.935 --> 00:08:47.997
these items are stretching, right,

198
00:08:47.997 --> 00:08:50.165
we know how stretch is the default.

199
00:08:50.165 --> 00:08:53.001
But we can align-content,

200
00:08:53.001 --> 00:08:54.501
we can say center,

201
00:08:56.090 --> 00:08:57.714
and that will center them.

202
00:08:57.714 --> 00:09:01.500
We can say start and that would put them at the top.

203
00:09:01.500 --> 00:09:02.491
End.

204
00:09:02.491 --> 00:09:05.907
And then similarly, space-around will put them around

205
00:09:05.907 --> 00:09:08.272
and space-between will do that.

206
00:09:08.272 --> 00:09:10.768
I don't run into that all that often,

207
00:09:10.768 --> 00:09:15.602
just because a fixed height on a grid is not as common as

208
00:09:15.602 --> 00:09:17.241
a width on

209
00:09:17.241 --> 00:09:19.329
on a grid, but it's good to know.

210
00:09:19.329 --> 00:09:21.507
Again, align is the vertical axis,

211
00:09:21.507 --> 00:09:24.021
justify is the horizontal axis.

212
00:09:24.021 --> 00:09:26.333
Good, and then finally, we've got these last two,

213
00:09:26.333 --> 00:09:28.082
which is align-self and justify-self.

214
00:09:28.082 --> 00:09:32.900
And what that allows us to do is to override each of those

215
00:09:32.900 --> 00:09:36.130
on a case-by-case basis, rather than

216
00:09:36.130 --> 00:09:37.137
a single basis.

217
00:09:37.137 --> 00:09:40.975
So let's take item one, two, three, four,

218
00:09:40.975 --> 00:09:42.965
let's take item five.

219
00:09:42.965 --> 00:09:46.218
And this would be on the item itself.

220
00:09:46.218 --> 00:09:48.891
And we could just do something like,

221
00:09:48.891 --> 00:09:51.225
let's say we wanna to do it along the x-axis,

222
00:09:51.225 --> 00:09:54.561
that's justify, so justify-self,

223
00:09:54.561 --> 00:09:57.001
and we can just say center.

224
00:09:57.001 --> 00:09:58.822
Oh, you have to spell it right for it to work.

225
00:09:58.822 --> 00:10:01.543
There we go, so you see how all of these are stretch,

226
00:10:01.543 --> 00:10:04.822
but I can override it on a case-by-case basis

227
00:10:04.822 --> 00:10:07.459
with the ability to justify-self.

228
00:10:07.459 --> 00:10:11.089
And align-self works exactly the same way.

229
00:10:11.089 --> 00:10:12.689
If I were to center that,

230
00:10:12.689 --> 00:10:14.455
then it's gonna pop it down center.

231
00:10:14.455 --> 00:10:15.838
And why is that not working?

232
00:10:15.838 --> 00:10:18.197
Well, we actually don't have any height

233
00:10:18.197 --> 00:10:20.191
on this actual element, but if I did,

234
00:10:20.191 --> 00:10:22.946
it would perfectly center itself.

235
00:10:22.946 --> 00:10:25.249
So good to put those in your back pocket.

236
00:10:25.249 --> 00:10:28.241
I try to think of some sorta silly way to remember that

237
00:10:28.241 --> 00:10:31.873
justify is on the x or the row-axis,

238
00:10:31.873 --> 00:10:36.568
and align is on the y or the vertical or the column axis.

239
00:10:36.568 --> 00:10:37.401
But

240
00:10:38.378 --> 00:10:41.245
after a while, you tend to remember it.

241
00:10:41.245 --> 00:10:43.227
Or just bookmark this little page and

242
00:10:43.227 --> 00:10:44.810
look at the items there.

243
00:10:44.810 --> 00:10:47.212
So we got a bunch of more examples coming up on

244
00:10:47.212 --> 00:10:48.045
when we can use that.

245
00:10:48.045 --> 00:10:50.037
And myself, I actually use this quite a bit

246
00:10:50.037 --> 00:10:53.019
just to center text inside of actual elements.

247
00:10:53.019 --> 00:10:55.454
And again, if you look back at the style.css,

248
00:10:55.454 --> 00:10:59.005
which is our base style, you'll notice that

249
00:10:59.005 --> 00:11:02.508
on each of the items, I have just displayed grid

250
00:11:02.508 --> 00:11:06.546
and I haven't given it any columns or rows or anything,

251
00:11:06.546 --> 00:11:09.708
but this little ditty right here will display grid,

252
00:11:09.708 --> 00:11:12.899
justify content center, align items center.

253
00:11:12.899 --> 00:11:17.340
That's a great way just to take whatever is in an element,

254
00:11:17.340 --> 00:11:19.661
might just be a paragraph tag, might be raw text,

255
00:11:19.661 --> 00:11:21.474
might a couple of paragraph tags,

256
00:11:21.474 --> 00:11:24.005
and just perfectly center it without having to

257
00:11:24.005 --> 00:11:25.553
to really worry about it.

258
00:11:25.553 --> 00:11:27.120
You can also do this with Flexbox

259
00:11:27.120 --> 00:11:30.104
but I actually think I prefer to do it in Grid,

260
00:11:30.104 --> 00:11:32.643
just because of the ability to both do

261
00:11:32.643 --> 00:11:35.376
justify-self and align-self.

262
00:11:35.376 --> 00:11:38.795
Whereas with Flexbox, you can only do align-self.

263
00:11:38.795 --> 00:11:40.978
There is no justify-self in Flexbox,

264
00:11:40.978 --> 00:11:42.868
which is a bit of a bummer.

265
00:11:42.868 --> 00:11:46.268
Maybe it'll come back in a revision to the Flexbox set,

266
00:11:46.268 --> 00:11:48.022
but I'm pretty happy with that.

267
00:11:48.022 --> 00:11:50.255
All right, let's move on to the next one.

268
00:11:50.255 --> 00:11:52.365
We're almost done, our fundamentals,

269
00:11:52.365 --> 00:11:56.532
and then we're gonna dive into some real-world examples.

