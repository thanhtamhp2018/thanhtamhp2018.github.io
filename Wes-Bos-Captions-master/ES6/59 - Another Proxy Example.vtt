WEBVTT

1
00:00:00.000 --> 00:00:00.000
 

2
00:00:02.260 --> 00:00:03.630
Let's do another example with 

3
00:00:03.810 --> 00:00:04.840
phone numbers. Phone numbers are 

4
00:00:04.850 --> 00:00:06.250
a tricky thing because sometimes 

5
00:00:06.325 --> 00:00:07.340
people put dashes in them, 

6
00:00:07.350 --> 00:00:08.860
sometimes people put parenthesis 

7
00:00:09.190 --> 00:00:11.910
or spaces or neither or pluses. 

8
00:00:11.920 --> 00:00:13.210
There's all kinds of different 

9
00:00:13.220 --> 00:00:14.370
characters that could go into a 

10
00:00:14.380 --> 00:00:15.990
phone number when sometimes you 

11
00:00:16.000 --> 00:00:18.640
might just want to store it as a 

12
00:00:18.650 --> 00:00:20.660
raw actual number. Now, I'm 

13
00:00:20.670 --> 00:00:21.780
going to assume that these are 

14
00:00:21.790 --> 00:00:23.680
US numbers. Obviously this would 

15
00:00:23.690 --> 00:00:25.890
be a little bit more involved if 

16
00:00:25.965 --> 00:00:26.630
it's an international numbers, 

17
00:00:26.680 --> 00:00:28.070
but we'll keep it simple here. 

18
00:00:28.800 --> 00:00:31.110
I'm going to first create what's 

19
00:00:31.120 --> 00:00:32.650
called a phone handler, and 

20
00:00:32.660 --> 00:00:35.310
that's going to do the trapping 

21
00:00:35.320 --> 00:00:36.850
of the set and get methods. 

22
00:00:37.380 --> 00:00:39.480
Let's first start with set, and 

23
00:00:39.300 --> 00:00:41.900
the set will take in the 

24
00:00:41.910 --> 00:00:45.070
target, the name, and the value. 

25
00:00:46.040 --> 00:00:48.600
Then we will go down here and 

26
00:00:48.810 --> 00:00:50.690
create a phone number proxy. 

27
00:00:50.765 --> 00:00:53.330
We're going to start off with an 

28
00:00:53.340 --> 00:00:54.680
empty object because there's no 

29
00:00:54.690 --> 00:00:55.970
phone numbers in it to start, 

30
00:00:56.920 --> 00:00:58.220
and pass it to phone handler. 

31
00:00:59.050 --> 00:01:00.800
When I set it, I could just set 

32
00:01:00.830 --> 00:01:05.000
the target name = value. Let's 

33
00:01:05.010 --> 00:01:09.070
try that out. What we've done 

34
00:01:09.070 --> 00:01:11.130
here is we've set the phone 

35
00:01:11.130 --> 00:01:12.350
number. We've got a plus here. 

36
00:01:12.360 --> 00:01:13.390
We have a space that someone 

37
00:01:13.400 --> 00:01:14.860
accidentally put in. We've got a 

38
00:01:14.870 --> 00:01:16.860
dash here, sometimes there's 

39
00:01:16.935 --> 00:01:17.400
going to be parenthesis. 

40
00:01:17.400 --> 00:01:19.010
Let's set another one, 

41
00:01:19.085 --> 00:01:21.700
phoneNumber.work is maybe 

42
00:01:21.700 --> 00:01:24.040
something like two, three, four, 

43
00:01:24.800 --> 00:01:26.730
and they only put spaces in it 

44
00:01:26.805 --> 00:01:28.220
in that case. Now we have 

45
00:01:28.295 --> 00:01:30.400
phoneNumbers, which is an object, 

46
00:01:30.410 --> 00:01:32.110
with some not nicely formatted 

47
00:01:32.185 --> 00:01:35.280
data inside of it. What we 

48
00:01:35.290 --> 00:01:37.600
can then do is, when someone 

49
00:01:37.610 --> 00:01:39.580
sets it, we can clean it of all 

50
00:01:39.590 --> 00:01:41.170
these characters that are non-

51
00:01:41.740 --> 00:01:44.830
numbers. We will say target.name = 

52
00:01:46.000 --> 00:01:47.250
value, and then we'll just run a 

53
00:01:47.260 --> 00:01:49.740
match against that, only for 

54
00:01:49.750 --> 00:01:54.890
numbers. Then we'll join it 

55
00:01:54.900 --> 00:01:57.780
together once we have it. Now, 

56
00:01:57.790 --> 00:01:59.270
I should be able to say 

57
00:01:59.345 --> 00:02:02.890
phoneNumbers.work, and then when 

58
00:02:02.900 --> 00:02:05.720
I pull up phoneNumbers.work is 

59
00:02:05.730 --> 00:02:08.320
just a actual number. Same goes 

60
00:02:08.330 --> 00:02:09.610
for the home one that we did. 

61
00:02:09.740 --> 00:02:12.590
When I pull up phoneNumber.home, 

62
00:02:13.140 --> 00:02:15.390
it will now be stripped of all 

63
00:02:15.400 --> 00:02:17.010
of your dashes and spaces and 

64
00:02:17.020 --> 00:02:18.400
any other characters that might 

65
00:02:18.410 --> 00:02:21.120
have then come on in with it. 

66
00:02:21.195 --> 00:02:22.260
We could go one further and 

67
00:02:22.270 --> 00:02:23.640
actually store it as number if 

68
00:02:23.650 --> 00:02:25.710
we wanted to, but let's do it on 

69
00:02:25.720 --> 00:02:27.020
the flip side of when I actually 

70
00:02:27.030 --> 00:02:28.950
pull it out of this object, we 

71
00:02:29.010 --> 00:02:30.230
want it to be consistently 

72
00:02:30.305 --> 00:02:32.350
formatted. That will be our get, 

73
00:02:34.820 --> 00:02:35.980
and from this we're going to 

74
00:02:35.990 --> 00:02:39.100
return the target name. That's 

75
00:02:39.110 --> 00:02:41.160
the default operation. What 

76
00:02:41.330 --> 00:02:43.250
we can do is use a .replace 

77
00:02:43.325 --> 00:02:47.970
RegExp here to format it in a 

78
00:02:47.980 --> 00:02:51.340
standard phone number fashion. I 

79
00:02:51.380 --> 00:02:52.320
just pulled this off the 

80
00:02:52.330 --> 00:02:54.330
Internet here, and now when we 

81
00:02:54.340 --> 00:02:56.140
try to set something. Let's try 

82
00:02:56.150 --> 00:03:00.490
work. Now when I pull the work 

83
00:03:00.560 --> 00:03:02.990
out, we intercept it with this 

84
00:03:03.000 --> 00:03:05.120
get trap and then we format it 

85
00:03:05.240 --> 00:03:07.440
as it comes out. No matter 

86
00:03:07.550 --> 00:03:14.900
how I pass in the values, it's 

87
00:03:14.910 --> 00:03:16.430
always going to pull it out and 

88
00:03:16.540 --> 00:03:18.610
format it very nicely for me. 

89
00:03:18.790 --> 00:03:19.850
That's another good example 

90
00:03:19.925 --> 00:03:21.020
where you might want to use a 

91
00:03:21.030 --> 00:03:23.040
handler. Again, we're using set 

92
00:03:23.115 --> 00:03:26.760
and get to step in between on 

93
00:03:26.770 --> 00:03:28.690
the proxy. One other thing 

94
00:03:28.700 --> 00:03:29.860
we did here is we didn't start 

95
00:03:29.870 --> 00:03:31.580
with an existing object, we just 

96
00:03:31.590 --> 00:03:33.380
passed it a blank object and 

97
00:03:33.390 --> 00:03:35.150
then use that to set values on.

