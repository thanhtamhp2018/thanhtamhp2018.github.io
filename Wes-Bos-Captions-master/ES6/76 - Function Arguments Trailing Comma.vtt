WEBVTT

1
00:00:02.218 --> 00:00:03.581
<v Narrator>So another new thing that we just</v>

2
00:00:03.581 --> 00:00:06.526
got in JavaScript is called a trailing comma,

3
00:00:06.526 --> 00:00:08.380
or comma dangle in a function.

4
00:00:08.380 --> 00:00:10.522
And a couple of years ago we actually got this in

5
00:00:10.522 --> 00:00:12.688
both objects and arrays, which means that

6
00:00:12.688 --> 00:00:14.590
you can have an array that looks like this:

7
00:00:14.590 --> 00:00:17.605
"Const names" is equal to, and if you have "Wes"

8
00:00:17.605 --> 00:00:21.294
and you have "kait, lux," and you want to end it off

9
00:00:21.294 --> 00:00:23.112
with a comma, that is totally fine.

10
00:00:23.112 --> 00:00:26.053
That's what's called a comma dangle, or a trailing comma.

11
00:00:26.053 --> 00:00:29.234
Which will allow you to easily go in and add another one.

12
00:00:29.234 --> 00:00:31.514
Same thing works for objects, where if you have

13
00:00:31.514 --> 00:00:34.699
a people object and you have "Wes,"

14
00:00:34.699 --> 00:00:38.616
and you say, "Cool," and Kate is "Even cooler,"

15
00:00:39.746 --> 00:00:41.805
and you have that comma dangle there,

16
00:00:41.805 --> 00:00:43.498
what happens is the next time you come around and

17
00:00:43.498 --> 00:00:47.691
you add a third person to this object, we can say

18
00:00:47.691 --> 00:00:49.299
she's the "Coolest."

19
00:00:49.299 --> 00:00:53.008
Right, and by doing that, sort of the benefit to

20
00:00:53.008 --> 00:00:55.203
having that comma dangle, some people don't like it,

21
00:00:55.203 --> 00:00:57.051
because for the longest time in JavaScript,

22
00:00:57.051 --> 00:00:58.490
that was not allowed.

23
00:00:58.490 --> 00:01:00.765
But the benefit to that is that, okay, look, let's say

24
00:01:00.765 --> 00:01:03.159
that I didn't have a comma dangle, and this was all

25
00:01:03.159 --> 00:01:06.792
checked into my git repo, and I want to come up and

26
00:01:06.792 --> 00:01:10.875
add a fourth person, so I'm going to add "Poppy."

27
00:01:11.746 --> 00:01:13.096
She's the "Smallest."

28
00:01:13.096 --> 00:01:15.827
So, what's happening, this is incomplete JavaScript

29
00:01:15.827 --> 00:01:19.029
because I need to now go and add a comma here.

30
00:01:19.029 --> 00:01:22.144
So, the argument for adding a comma dangle is that

31
00:01:22.144 --> 00:01:24.832
if this was going into GitHub, and let's say somebody

32
00:01:24.832 --> 00:01:28.606
else on my team wrote this line, and then I went in

33
00:01:28.606 --> 00:01:31.456
and wrote this line, if I were just to add a comma to that

34
00:01:31.456 --> 00:01:34.024
all of a sudden I am blamed for that line.

35
00:01:34.024 --> 00:01:36.581
And if something were to go wrong, they would look

36
00:01:36.581 --> 00:01:39.225
back at that line and say, like, "Oh, you're the last

37
00:01:39.225 --> 00:01:40.768
person who touched that line."

38
00:01:40.768 --> 00:01:42.496
When really, of course you touched it, but you just

39
00:01:42.496 --> 00:01:44.469
added a comma, because you're really dealing with

40
00:01:44.469 --> 00:01:46.053
line 16 here.

41
00:01:46.053 --> 00:01:48.610
So by doing a comma dangle, let's say that's all

42
00:01:48.610 --> 00:01:52.058
checked in now, and then I were to add a new person,

43
00:01:52.058 --> 00:01:54.725
maybe "Snickers," and "Bow wow."

44
00:01:57.056 --> 00:01:59.817
By having that comma dangle already checked in when Poppy

45
00:01:59.817 --> 00:02:02.403
was added, I just can add another comma.

46
00:02:02.403 --> 00:02:04.960
You're always thinking about the next person on the line.

47
00:02:04.960 --> 00:02:08.840
So that's the same thing for arrays as well, where if you

48
00:02:08.840 --> 00:02:11.698
put each item in the array on its own line.

49
00:02:11.698 --> 00:02:12.987
Something that looks like this.

50
00:02:12.987 --> 00:02:14.979
Then you don't really have to worry about that

51
00:02:14.979 --> 00:02:15.837
all that much.

52
00:02:15.837 --> 00:02:18.795
Because when Poppy comes around, I'm not actually

53
00:02:18.795 --> 00:02:20.962
editing the line before it in there.

54
00:02:20.962 --> 00:02:23.403
So, that now works for functions as well.

55
00:02:23.403 --> 00:02:26.565
And it's the exact same sort of idea behind it.

56
00:02:26.565 --> 00:02:29.815
So if I were to say, "Function family,"

57
00:02:30.830 --> 00:02:34.886
and let's say "Mom" and "Dad," and then once we had kids

58
00:02:34.886 --> 00:02:37.382
I wanted to add a "Children" argument.

59
00:02:37.382 --> 00:02:39.075
Because I had that comma dangle there, or maybe

60
00:02:39.075 --> 00:02:40.910
if these were on their own line, it doesn't really

61
00:02:40.910 --> 00:02:42.976
make that much difference if they're not on their own line,

62
00:02:42.976 --> 00:02:46.024
but sometimes people write functions like this.

63
00:02:46.024 --> 00:02:49.706
So I could just go ahead and add in a line 28 here,

64
00:02:49.706 --> 00:02:51.970
called "Children," and have a comma there.

65
00:02:51.970 --> 00:02:53.876
And then if I were to add in, maybe in two months,

66
00:02:53.876 --> 00:02:56.469
I could add "Dogs," and comma dangle there.

67
00:02:56.469 --> 00:02:59.259
There's no unnecessary editing of the line

68
00:02:59.259 --> 00:03:00.592
before that it comes with.

69
00:03:00.592 --> 00:03:02.276
So, that's totally up to you.

70
00:03:02.276 --> 00:03:04.336
Generally what I like to do is set out my ESLint

71
00:03:04.336 --> 00:03:07.216
or my Prettier to have these rules in there.

72
00:03:07.216 --> 00:03:08.493
So that if you forget them,

73
00:03:08.493 --> 00:03:10.101
they'll automatically add them in.

74
00:03:10.101 --> 00:03:11.949
And if you add them in, but you should not have them,

75
00:03:11.949 --> 00:03:13.011
it will just take it out.

76
00:03:13.011 --> 00:03:15.062
There's no sense in sort of, like, sitting around

77
00:03:15.062 --> 00:03:17.360
a coffee talking about what you prefer.

78
00:03:17.360 --> 00:03:21.045
Just set your ESLint and Prettier up and have

79
00:03:21.045 --> 00:03:23.417
the computer figure that out for you.

