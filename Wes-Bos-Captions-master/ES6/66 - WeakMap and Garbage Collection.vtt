WEBVTT

1
00:00:00.000 --> 00:00:00.000
 Instructor: A couple 

2
00:00:02.380 --> 00:00:03.570
of videos back, we talked about 

3
00:00:04.070 --> 00:00:05.400
a WeakSet where it gets garbage 

4
00:00:05.410 --> 00:00:07.530
collected. A WeakMap is pretty 

5
00:00:07.540 --> 00:00:09.090
much exactly the same thing. 

6
00:00:09.165 --> 00:00:10.880
A WeakMap doesn't have a size. 

7
00:00:10.890 --> 00:00:12.160
You can never tell how many 

8
00:00:12.230 --> 00:00:14.320
elements are in it. A WeakMap is 

9
00:00:14.395 --> 00:00:15.660
not enumerable, which means you 

10
00:00:15.670 --> 00:00:18.500
cannot loop over it. The items 

11
00:00:18.510 --> 00:00:20.150
inside of a WeakMap, if they no 

12
00:00:20.160 --> 00:00:21.770
longer exist anywhere else in 

13
00:00:21.780 --> 00:00:23.350
your application, they will get 

14
00:00:23.360 --> 00:00:24.780
garbage collected and they'll be 

15
00:00:24.850 --> 00:00:26.210
removed from your WeakMap. 

16
00:00:27.120 --> 00:00:28.350
Let's go through a quick example 

17
00:00:28.360 --> 00:00:29.630
of where we have a regular map 

18
00:00:29.640 --> 00:00:31.840
and a regular WeakMap, and we'll 

19
00:00:31.850 --> 00:00:33.430
show exactly the difference here. 

20
00:00:33.505 --> 00:00:36.570
We'll create two objects here, 

21
00:00:36.920 --> 00:00:41.610
then 

22
00:00:41.620 --> 00:00:45.110
we'll create two maps. We'll add 

23
00:00:45.120 --> 00:00:46.500
a button to each of the maps. 

24
00:00:51.400 --> 00:00:52.910
Notice how I'm using the keys 

25
00:00:52.920 --> 00:00:54.640
here, which are objects. 

26
00:00:55.670 --> 00:00:56.720
Let's take a look at what we've 

27
00:00:56.730 --> 00:00:59.080
got here. We've got strong, 

28
00:00:59.180 --> 00:01:02.610
which is our actual map here. 

29
00:01:02.830 --> 00:01:04.700
Oops, we got to say weak.set. 

30
00:01:05.790 --> 00:01:07.310
Strong should have one item in 

31
00:01:07.320 --> 00:01:10.460
it, good, and weak should have 

32
00:01:10.820 --> 00:01:12.340
another item in it. Good. 

33
00:01:12.415 --> 00:01:13.990
They each have one item in it. 

34
00:01:16.050 --> 00:01:18.630
If I were to say weak.size, we 

35
00:01:18.640 --> 00:01:20.250
get nothing. But if I say strong.

36
00:01:20.480 --> 00:01:23.250
size, we get 1. Why? Because a 

37
00:01:23.325 --> 00:01:24.270
WeakMap doesn't have a size. 

38
00:01:24.280 --> 00:01:26.170
Even though DevTools knows what 

39
00:01:26.180 --> 00:01:27.490
it is here, you cannot get the 

40
00:01:27.500 --> 00:01:30.030
size of a WeakMap at all. Now, 

41
00:01:30.040 --> 00:01:31.740
let's go and delete some of them. 

42
00:01:31.815 --> 00:01:38.040
dog1 = null, dog2 = null. We've 

43
00:01:38.050 --> 00:01:39.310
created these, we've added them 

44
00:01:39.320 --> 00:01:40.430
to the map, and then we've 

45
00:01:40.440 --> 00:01:43.500
deleted them. Let's take a look 

46
00:01:43.510 --> 00:01:47.300
at our maps here. What is the 

47
00:01:47.310 --> 00:01:48.270
error here? Assignment to 

48
00:01:48.280 --> 00:01:49.870
constant variable. Cannot do 

49
00:01:49.880 --> 00:01:51.120
this, so we would have to say 

50
00:01:51.130 --> 00:01:55.360
let dog, not const dog. We 

51
00:01:55.370 --> 00:01:57.610
have our strong, still has an 

52
00:01:57.620 --> 00:01:59.380
item in it. Weak, it might still 

53
00:01:59.390 --> 00:02:00.600
have an item in it. It takes a 

54
00:02:00.610 --> 00:02:01.720
while to get garbage collected. 

55
00:02:01.720 --> 00:02:03.830
Oh, nothing there. We no 

56
00:02:03.840 --> 00:02:06.490
longer have a dog1, and we no 

57
00:02:06.500 --> 00:02:10.080
longer have a dog2, but the 

58
00:02:10.090 --> 00:02:12.000
strong one is still holding onto 

59
00:02:12.190 --> 00:02:13.950
this object that no longer 

60
00:02:13.960 --> 00:02:15.370
exists. That's a memory leak 

61
00:02:15.380 --> 00:02:16.340
there, because there's no way 

62
00:02:16.350 --> 00:02:17.850
for us to reference it, whereas 

63
00:02:18.260 --> 00:02:19.420
the WeakMap has totally cleaned 

64
00:02:19.420 --> 00:02:20.900
it up. Garbage collection has 

65
00:02:20.910 --> 00:02:22.520
happened and we no longer 

66
00:02:22.530 --> 00:02:24.150
reference it there. If you 

67
00:02:24.160 --> 00:02:25.750
need something like that, where 

68
00:02:25.760 --> 00:02:27.310
it gets garbage collected, where 

69
00:02:27.310 --> 00:02:29.230
you don't have to babysit what 

70
00:02:29.240 --> 00:02:30.870
is and isn't inside of the map, 

71
00:02:31.120 --> 00:02:32.280
then that's the case where you 

72
00:02:32.290 --> 00:02:34.280
reach for a WeakMap over a map.

