WEBVTT

1
00:00:02.640 --> 00:00:02.910
Instructeur: Nous avons

2
00:00:02.910 --> 00:00:04.890
appris ce qu'étaient let et const et

3
00:00:04.190 --> 00:00:05.240
ce qu'ils font, et comment leur portée

4
00:00:05.315 --> 00:00:06.440
est délimitée, et quand elles peuvent être

5
00:00:06.515 --> 00:00:07.710
réassignées et quand elles ne le peuvent pas,

6
00:00:07.810 --> 00:00:09.100
mais il reste une interrogation qui est,

7
00:00:09.175 --> 00:00:10.530
que dois-je utiliser

8
00:00:10.540 --> 00:00:12.860
moi-même. C'est un peu un

9
00:00:12.870 --> 00:00:14.960
sujet d'actualité dans la communauté en ce

10
00:00:14.970  --> 00:00:17.320
moment, car certaines personnes préfèrent

11
00:00:17.320 --> 00:00:19.050
toujours utiliser var. Certaines personnes

12
00:00:19.060 --> 00:00:20.290
disent que "Var est mort,

13
00:00:20.560 --> 00:00:22.000
totalement." Certaines personnes disent aussi, "Utilisez

14
00:00:22.010 --> 00:00:23.640
lat." D'autres personnes utilisent uniquement

15
00:00:23.715 --> 00:00:24.130
const. Je vais juste

16
00:00:25.180 --> 00:00:27.920
développer deux des opinions majeures

17
00:00:27.930 --> 00:00:29.870
ici. Elles sont toutes les deux portées par des gens

18
00:00:29.870 --> 00:00:31.330
très, très intelligents

19
00:00:31.405 --> 00:00:32.520
sur la scène JavaScript, alors je vous

20
00:00:32.530 --> 00:00:34.450
laisserai choisir la vôtre. Celle-ci,

21
00:00:34.460 --> 00:00:37.380
faite par Mathias Bynens, est ma manière de faire

22
00:00:37.960 --> 00:00:41.100
de faire. Il en parle plus

23
00:00:41.110 --> 00:00:42.730
comme, "Const n'est pas seulement une question

24
00:00:42.805 --> 00:00:43.080
d'immutabilité où on peut

25
00:00:43.150 --> 00:00:44.740
changer la valeur des propriétés." Nous en

26
00:00:44.750 --> 00:00:46.800
avons discuté, mais si vous scroller

27
00:00:46.875 --> 00:00:46.760
jusqu'en bas, ici,

28
00:00:48.160 --> 00:00:50.490
c'est la façon dont il l'utilise, et là c'est

29
00:00:50.565 --> 00:00:50.580
comment je l'utilise moi. "Utilisez const

30
00:00:50.610 --> 00:00:51.850
par défaut," comme ça à chaque fois que

31
00:00:51.860 --> 00:00:53.460
vous créez une variable, partez du principe que

32
00:00:53.535 --> 00:00:55.350
c'est const. "Utilisez let seulement si

33
00:00:55.425 --> 00:00:56.510
la réassignation est nécessaire." Seulement si

34
00:00:56.520 --> 00:00:58.250
vous avez besoin de mettre à jour la valeur de

35
00:00:58.260 --> 00:00:59.840
votre variable, vous devez utiliser

36
00:00:59.915 --> 00:01:02.750
let. Vous pouvez utiliser const afin de garder

37
00:01:02.760 --> 00:01:04.490
la même valeur. Enfin, var

38
00:01:04.340 --> 00:01:05.940
ne devrait jamais être utilisé avec ES6.

39
00:01:06.015 --> 00:01:07.150
C'est un peu le principe que

40
00:01:07.160 --> 00:01:09.070
j'adopte. Une autre opinion

41
00:01:09.080 --> 00:01:11.420
qui a du succès, est faite par Kyle Simpson,

42
00:01:11.420 --> 00:01:12.820
qui écrit un tas de

43
00:01:13.050 --> 00:01:14.930
livres JavaScript géniaux, et qui est,

44
00:01:15.290 --> 00:01:17.090
"Utilisez var pour les variables

45
00:01:17.100 --> 00:01:18.670
qui sont partagées partout," donc

46
00:01:18.680 --> 00:01:20.430
partager des portées plus grandes afin de

47
00:01:20.440 --> 00:01:22.530
les utiliser à l'intérieur de votre fonction. "

48
00:01:23.170 --> 00:01:25.110
Utilisez let for les variables localisées

49
00:01:25.120 --> 00:01:26.720
dans des portées plus courtes." "Refactorez

50
00:01:26.795 --> 00:01:29.790
let en const seulement après qu'une certaine quantité

51
00:01:29.800 --> 00:01:31.770
de code doive être écrite, et

52
00:01:31.845 --> 00:01:31.980
vous pouvez être à peu prêt sûr que

53
00:01:31.990 --> 00:01:32.760
le cas ici ne devrait pas être

54
00:01:32.760 --> 00:01:33.930
un réassignement de variable," car c'est ce

55
00:01:33.930 --> 00:01:35.680
qui est un peu embêtant avec const. Si

56
00:01:36.000 --> 00:01:37.490
vous réalisez trop tard que, "Oh, j'ai

57
00:01:37.500 --> 00:01:38.830
finalement besoin de mettre à jour cette valeur,"

58
00:01:38.905 --> 00:01:40.370
vous devez retourner en arrière et changer

59
00:01:40.380 --> 00:01:42.750
en let au lieu de const.

60
00:01:42.360 --> 00:01:43.490
Ces deux opinions sont toutes les deux

61
00:01:43.500 --> 00:01:45.380
très valides. Je vous laisse vous faire

62
00:01:45.390 --> 00:01:46.640
votre propre avis. A travers les

63
00:01:46.650 --> 00:01:47.890
vidéos, je suivrai

64
00:01:48.530 --> 00:01:50.990
ce conseil

65
00:01:51.065 --> 00:01:51.390
sur ce point.

