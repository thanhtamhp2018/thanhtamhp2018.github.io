WEBVTT

1
00:00:02.470 --> 00:00:02.560
 Instructor: In 

2
00:00:02.560 --> 00:00:03.520
JavaScript, when you want to put 

3
00:00:03.520 --> 00:00:05.050
a variable inside of a string, 

4
00:00:05.060 --> 00:00:06.490
it's actually a pain in the ass 

5
00:00:06.565 --> 00:00:07.760
because you have to stop your 

6
00:00:07.770 --> 00:00:09.250
string, concatenate on the 

7
00:00:09.260 --> 00:00:11.120
variable, and then open your 

8
00:00:11.130 --> 00:00:12.590
string again and keep going. 

9
00:00:12.870 --> 00:00:14.720
Every other language has the 

10
00:00:14.795 --> 00:00:15.440
ability to just drop your 

11
00:00:15.450 --> 00:00:16.660
variables right inside of a 

12
00:00:16.670 --> 00:00:18.380
string and just interpolate it 

13
00:00:18.390 --> 00:00:20.070
like that, but not JavaScript. 

14
00:00:20.630 --> 00:00:22.290
What ends up happening is you 

15
00:00:22.300 --> 00:00:24.190
forget one of your closing, and 

16
00:00:24.265 --> 00:00:24.850
you get an error and it tells 

17
00:00:24.860 --> 00:00:26.350
you it's on line 11. You're like "

18
00:00:26.360 --> 00:00:27.610
Of course it's on line 11, but I 

19
00:00:27.610 --> 00:00:30.290
don't know where it is." We 

20
00:00:30.300 --> 00:00:32.280
can fix all of that with what's 

21
00:00:32.290 --> 00:00:33.320
called template strings, or 

22
00:00:33.330 --> 00:00:36.500
template literals. In JavaScript 

23
00:00:36.510 --> 00:00:38.440
we have double quotes and single 

24
00:00:38.450 --> 00:00:40.990
quotes to make a string. Now we 

25
00:00:41.000 --> 00:00:42.220
have a third way to make a 

26
00:00:42.230 --> 00:00:44.440
string, and that is with back-

27
00:00:44.450 --> 00:00:45.520
ticks. We're going to take 

28
00:00:45.530 --> 00:00:46.570
this code right here, and first 

29
00:00:46.645 --> 00:00:47.620
of all I'm going to make all 

30
00:00:47.960 --> 00:00:49.720
those const, as they do not 

31
00:00:49.730 --> 00:00:51.020
change, so there's no need to 

32
00:00:51.710 --> 00:00:53.610
have those as a var or a let. 

33
00:00:53.930 --> 00:00:55.870
Now we have a name variable, 

34
00:00:55.920 --> 00:00:57.360
we're setting that to "Snickers." 

35
00:00:57.370 --> 00:00:58.670
We have an age variable that's 

36
00:00:58.680 --> 00:00:59.900
set to two, and we have the 

37
00:00:59.910 --> 00:01:01.060
sentence variable that I'm 

38
00:01:01.070 --> 00:01:03.950
making. How do we change this 

39
00:01:03.960 --> 00:01:06.270
now? Let's look at it. I'm going 

40
00:01:06.345 --> 00:01:07.460
to actually use back-ticks here, 

41
00:01:08.110 --> 00:01:09.880
close the back-tick there, and 

42
00:01:09.890 --> 00:01:13.330
then anywhere I needed to open 

43
00:01:13.530 --> 00:01:16.380
that, we simply use dollar sign, 

44
00:01:16.500 --> 00:01:17.880
curly bracket -- you see the 

45
00:01:17.890 --> 00:01:19.110
syntax highlighting change -- 

46
00:01:19.480 --> 00:01:20.990
and close your curly bracket. 

47
00:01:21.190 --> 00:01:22.950
That is going to pop in, or 

48
00:01:22.960 --> 00:01:24.830
interpolate, the actual variable 

49
00:01:24.840 --> 00:01:27.050
that we previously had set there. 

50
00:01:27.580 --> 00:01:30.330
We don't need any of this. We 

51
00:01:30.460 --> 00:01:31.880
want age, dollar sign 

52
00:01:31.890 --> 00:01:33.910
parentheses. You can also do 

53
00:01:34.130 --> 00:01:35.900
JavaScript straight away inside 

54
00:01:35.910 --> 00:01:37.930
of these curly brackets here. 

55
00:01:37.940 --> 00:01:39.210
You can pop in a variable, you 

56
00:01:39.220 --> 00:01:40.880
can run a function, you can also 

57
00:01:41.220 --> 00:01:42.740
run straight JavaScript. I'm 

58
00:01:42.815 --> 00:01:45.130
calculating the age in dog years 

59
00:01:45.140 --> 00:01:48.680
right inside of that, get rid of 

60
00:01:48.755 --> 00:01:49.520
that and we're good to go. 

61
00:01:49.560 --> 00:01:53.080
Console log sentence, and you 

62
00:01:52.820 --> 00:01:54.030
will now see it's just a regular 

63
00:01:54.040 --> 00:01:56.430
sentence. Uh oh, what 

64
00:01:56.440 --> 00:01:58.180
happened here? Const. I was 

65
00:01:58.190 --> 00:02:00.160
duplicating it so I could show 

66
00:02:00.235 --> 00:02:01.220
you the old version and the new 

67
00:02:01.295 --> 00:02:01.660
version. Obviously you can't 

68
00:02:01.670 --> 00:02:03.080
declare the same variable twice, 

69
00:02:03.155 --> 00:02:03.960
so I need to get rid of that. 

70
00:02:04.850 --> 00:02:06.300
Now it says my dog Snickers is 

71
00:02:06.375 --> 00:02:08.370
14 years old in dog years. 

72
00:02:09.270 --> 00:02:10.870
That is template strings at the 

73
00:02:10.880 --> 00:02:12.450
very basic. However there's 

74
00:02:12.050 --> 00:02:13.700
quite a bit more that we can do 

75
00:02:13.710 --> 00:02:15.390
with it. It can be very handy 

76
00:02:15.730 --> 00:02:17.390
other than just being able to 

77
00:02:17.400 --> 00:02:19.350
stick variables inside of it.

